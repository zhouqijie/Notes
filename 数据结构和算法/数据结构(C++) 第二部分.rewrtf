{\rtf1\ansi\ansicpg936\deff0\nouicompat\deflang1033\deflangfe2052{\fonttbl{\f0\fnil\fcharset134 \'ba\'da\'cc\'e5;}{\f1\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f2\fnil\fcharset1 Segoe UI Symbol;}{\f3\fswiss\fcharset0 Calibri;}{\f4\fnil Segoe UI Symbol;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\qc\b\f0\fs64\lang2052\'d0\'f2\'d5\'c2 \'ca\'f7\par

\pard\ul\fs40\'c1\'bd\'d6\'d6\'ca\'f7\'b5\'c4\'b6\'a8\'d2\'e5\ulnone\b0\f1\fs24\par

\pard\fi300\f2\u11088?\f1\'d7\'d4\'d3\'c9\'ca\'f7\'a3\'ba\'d2\'bb\'bf\'c5\'d7\'d4\'d3\'c9\'ca\'f7\'b6\'a8\'d2\'e5\'ce\'aa\'d2\'bb\'b8\'f6\'b6\'fe\'d4\'aa\'d7\'e9\lang1033 Tf=(V, E)\lang2052\'a3\'ac\'bc\'b4\lang1033 n\lang2052\'b8\'f6\'b6\'a5\'b5\'e3\lang1033 vertex\lang2052\'ba\'cd\lang1033 n-1\lang2052\'b8\'f6\'b1\'df\lang1033 edge(\lang2052\'bb\'f2\'b3\'c6\'b7\'d6\'d6\'a7\lang1033 brunch)\lang2052\'d7\'e9\'b3\'c9\'b5\'c4\'bc\'af\'ba\'cf\'a1\'a3\'a3\'a8\'cd\'bc\'c2\'db\'b5\'c4\'b8\'c5\'c4\'ee\'a3\'ac\'b2\'bb\'c9\'ee\'c8\'eb\'c1\'cb\'bd\'e2\'a3\'a9\par
\f2\u11088?\f1\'d3\'d0\'b8\'f9\'ca\'f7\'a3\'ba\'d2\'bb\'bf\'c5\'d3\'d0\'b8\'f9\'ca\'f7\lang1033 T\lang2052\'a3\'ac\'bc\'f2\'b3\'c6\'ce\'aa\'ca\'f7\'a3\'ac\'cb\'fc\'ca\'c7\lang1033 n\lang2052\'b8\'f6\'bd\'da\'b5\'e3\'b5\'c4\'d3\'d0\'cf\'de\'bc\'af\'ba\'cf\'a1\'a3\lang1033 n==0\lang2052\'ca\'b1\'b3\'c6\'ce\'aa\'bf\'d5\'ca\'f7\'a3\'ac\'b7\'f1\'d4\'f2\'b3\'c6\'ce\'aa\'b7\'c7\'bf\'d5\'ca\'f7\'a1\'a3\par

\pard\ul\b\f0\fs40\'ca\'f5\'d3\'ef\'ba\'cd\'b6\'a8\'d2\'e5\ulnone\b0\f1\fs24\par
\b\fs32\'bd\'e1\'b5\'e3\'a3\'a8\lang1033 Node\lang2052\'a3\'a9\lang1033 :\b0\f3\fs24\par

\pard\fi300\f2\lang2052\u11088?\f1\'b0\'fc\'ba\'ac\'ca\'fd\'be\'dd\'cf\'ee\'d2\'d4\'bc\'b0\'d6\'b8\'cf\'f2\'c6\'e4\'cb\'fb\'bd\'e1\'b5\'e3\'b5\'c4\'b7\'d6\'d6\'a7\f3\lang1033 /\f1\lang2052\'d6\'b8\'d5\'eb\'a1\'a3\par

\pard\b\fs32\'bd\'da\'b5\'e3\'b5\'c4\'b6\'c8\'a3\'a8\lang1033 Degree\lang2052\'a3\'a9\'a3\'ba\par

\pard\fi300\b0\f2\fs24\u11088?\f1\'bd\'e1\'b5\'e3\'cb\'f9\'d3\'b5\'d3\'d0\'b5\'c4\'d7\'d3\'ca\'f7\'bf\'c3\'ca\'f7\'a1\'a3\par

\pard\b\fs32\'d2\'b6\'d7\'d3\'bd\'e1\'b5\'e3\'a3\'a8\lang1033 leaf\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'b6\'c8\'ce\'aa\f3\lang1033 0\f1\lang2052\'b5\'c4\'bd\'e1\'b5\'e3\'a3\'ac\'bb\'f2\'b3\'c6\'d6\'d5\'b6\'cb\'bd\'e1\'b5\'e3\'a1\'a3\par

\pard\b\fs32\'b7\'d6\'d6\'a7\'bd\'e1\'b5\'e3\'a3\'a8\lang1033 Brunch\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'b3\'fd\'d2\'b6\'bd\'e1\'b5\'e3\'cd\'e2\'b5\'c4\'c6\'e4\'cb\'fb\'bd\'e1\'b5\'e3\'a3\'ac\'bb\'f2\'b3\'c6\'b7\'c7\'d6\'d5\'b6\'cb\'bd\'e1\'b5\'e3\'a1\'a3\par

\pard\b\fs32\'bd\'e1\'b5\'e3\'b2\'e3\'b4\'ce\'a3\'a8\lang1033 Level\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'b4\'d3\'b8\'fa\'b5\'bd\'b8\'c3\'bd\'da\'b5\'e3\'cb\'f9\'be\'ad\'c2\'b7\'be\'b6\'c9\'cf\'b5\'c4\'b7\'d6\'d6\'a7\'cc\'f5\'ca\'fd\'a1\'a3\'bb\'f2\'b3\'c6\'bd\'e1\'b5\'e3\'c9\'ee\'b6\'c8\'a1\'a3\par

\pard\b\fs32\'ca\'f7\'b5\'c4\'c9\'ee\'b6\'c8\'a3\'a8\lang1033 Depth\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'ca\'f7\'d6\'d0\'be\'e0\'c0\'eb\'b8\'f9\'bd\'e1\'b5\'e3\'d7\'ee\'d4\'b6\'b5\'c4\'bd\'e1\'b5\'e3\'cb\'f9\'b4\'a6\'b2\'e3\'b4\'ce\'a1\'a3\par

\pard\b\fs32\'ca\'f7\'b5\'c4\'b8\'df\'b6\'c8\'a3\'a8\lang1033 Height\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'ca\'fd\'d6\'b5\'c9\'cf\'b5\'c8\'d3\'da\'ca\'f7\'b5\'c4\'c9\'ee\'b6\'c8\'a1\'a3\par

\pard\b\fs32\'ca\'f7\'b5\'c4\'b6\'c8\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'ca\'f7\'d6\'d0\'bd\'e1\'b5\'e3\'b6\'c8\'b5\'c4\'d7\'ee\'b4\'f3\'d6\'b5\'a1\'a3\par

\pard\b\fs32\'d3\'d0\'d0\'f2\'ca\'f7\'a3\'a8\lang1033 Orderd\lang2052  \lang1033 Tree\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'ca\'f7\'d6\'d0\'bd\'e1\'b5\'e3\'b5\'c4\'b8\'f7\'bf\'c3\'d7\'d3\'ca\'f7\'d6\'ae\'bc\'e4\'b5\'c4\'b4\'ce\'d0\'f2\'ca\'c7\'b2\'bb\'d6\'d8\'d2\'aa\'b5\'c4\'a3\'ac\'bf\'c9\'d2\'d4\'bd\'bb\'bb\'bb\'ce\'bb\'d6\'c3\'a1\'a3\par

\pard\b\fs32\'c9\'ad\'c1\'d6\'a3\'a8\lang1033 Forest\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'ca\'c7\f3\lang1033 m\f1\lang2052\'bf\'c3\'ca\'f7\'b5\'c4\'bc\'af\'ba\'cf\'a1\'a3\par

\pard\b\fs32\'c6\'e4\'cb\'fb\'a3\'ba\b0\fs24\par

\pard\fi300\'d7\'d3\'c5\'ae\'bd\'e1\'b5\'e3\'bb\'f2\'b3\'c6\'ba\'a2\'d7\'d3\'bd\'e1\'b5\'e3\'a3\'a8\f3\lang1033 child\f1\lang2052\'a3\'a9\f3\lang1033 /\f1\lang2052\'b8\'b8\'bd\'e1\'b5\'e3\'a3\'a8\f3\lang1033 parent\f1\lang2052\'a3\'a9\f3\lang1033 /\f1\lang2052\'d0\'d6\'b5\'dc\'bd\'e1\'b5\'e3\'a3\'a8\f3\lang1033 sibling\f1\lang2052\'a3\'a9\f3\lang1033 /\f1\lang2052\'d7\'e6\'cf\'c8\'bd\'e1\'b5\'e3\'a3\'a8\f3\lang1033 ancestor\f1\lang2052\'a3\'a9\f3\lang1033 /\f1\lang2052\'d7\'d3\'cb\'ef\'bd\'e1\'b5\'e3\'a3\'a8\f3\lang1033 descendant\f1\lang2052\'a3\'a9\'a1\'a3\par
\par
\par

\pard\qc\b\f0\fs64\'b5\'da\'d2\'bb\'bd\'da \'b6\'fe\'b2\'e6\'ca\'f7\b0\f1\fs24\par

\pard\ul\b\f0\fs40\'b6\'fe\'b2\'e6\'ca\'f7\'d6\'d8\'d2\'aa\'d0\'d4\'d6\'ca\ulnone\b0\f1\fs24\par
\b\fs32\lang1033 1\lang2052\'a1\'a2\'b5\'da\lang1033 i\lang2052\'b2\'e3\'d7\'ee\'b4\'f3\'bd\'e1\'b5\'e3\'ca\'fd\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'b6\'fe\'b2\'e6\'ca\'f7\'b5\'da\lang1033 i\lang2052\'b2\'e3\'d7\'ee\'b6\'e0\'d3\'d0\lang1033 2^(i-1)\lang2052\'b8\'f6\'bd\'e1\'b5\'e3\'a1\'a3\par

\pard\b\fs32\lang1033 2\lang2052\'a1\'a2\'d7\'ee\'b4\'f3\'bd\'e1\'b5\'e3\'ca\'fd\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'c9\'ee\'b6\'c8\'ce\'aa\lang1033 k\lang2052\'b5\'c4\'b6\'fe\'b2\'e6\'ca\'f7\'d7\'ee\'b6\'e0\lang1033 2^k - 1\lang2052\'b8\'f6\'bd\'e1\'b5\'e3\'a1\'a3\par

\pard\b\fs32\lang1033 3\lang2052\'a1\'a2\'d2\'b6\'d7\'d3\'bd\'e1\'b5\'e3\'ca\'fd\'b9\'d8\'cf\'b5\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'b7\'c7\'bf\'d5\'b6\'fe\'b2\'e6\'ca\'f7\'d2\'b6\'bd\'e1\'b5\'e3\'ca\'fd\'ce\'aa\lang1033 n0\lang2052\'a3\'ac\'d4\'f2\'b6\'c8\'ce\'aa\lang1033 2\lang2052\'b5\'c4\'b7\'c7\'d2\'b6\'bd\'e1\'b5\'e3\'ca\'fd\'ce\'aa\lang1033 n2 = n0 - 1\lang2052\'a1\'a3\par

\pard\b\fs32\lang1033 4\lang2052\'a1\'a2\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'c9\'ee\'b6\'c8\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'d3\'d0\lang1033 n\lang2052\'b8\'f6\'bd\'e1\'b5\'e3\'b5\'c4\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'c9\'ee\'b6\'c8\'ce\'aa\'a9\'b0\lang1033 log2_(n + 1)\lang2052\'a9\'b4\'a1\'a3\par

\pard\b\fs32\lang1033 5\lang2052\'a1\'a2\'bd\'e1\'b5\'e3\'b1\'e0\'ba\'c5\'ce\'aa\lang1033 i\lang2052\'b5\'c4\'bd\'e1\'b5\'e3\'c2\'fa\'d7\'e3\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'bd\'e1\'b5\'e3\lang1033 i\lang2052\'b5\'c4\'b8\'b8\'bd\'da\'b5\'e3\'ce\'aa\'a9\'b8\lang1033 i / 2\lang2052\'a9\'bc\'a1\'a3\par
\f2\u11088?\f1\'d7\'f3\'d7\'d3\'c5\'ae\'bd\'e1\'b5\'e3\'ce\'aa\lang1033 2*i\lang2052\'a3\'ac\'d3\'d2\'d7\'d3\'c5\'ae\'bd\'e1\'b5\'e3\'ce\'aa\lang1033 2*i + 1\lang2052\'a1\'a3\par
\f2\u11088?\f1\'c8\'f4\lang1033 i\lang2052\'ce\'aa\'c6\'e6\'ca\'fd\'a3\'ac\'d4\'f2\'cb\'fc\'ca\'c7\'d7\'f3\'d0\'d6\'b5\'dc\'a1\'a3\'c8\'f4\lang1033 i\lang2052\'ce\'aa\'c5\'bc\'ca\'fd\'a3\'ac\'d4\'f2\'cb\'fc\'ca\'c7\'d3\'d2\'d0\'d6\'b5\'dc\'a1\'a3\par
\f2\u11088?\f1\'cb\'f9\'d4\'da\'b2\'e3\'b4\'ce\'a9\'b8\lang1033 log2_i\lang2052\'a9\'bc \lang1033 + 1\lang2052\'a1\'a3\par

\pard\ul\b\f0\fs40\'cc\'d8\'ca\'e2\'b5\'c4\'b6\'fe\'b2\'e6\'ca\'f7\ulnone\b0\f1\fs24\par
\b\fs32\'c2\'fa\'b6\'fe\'b2\'e6\'ca\'f7\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'c9\'ee\'b6\'c8\'ce\'aa\lang1033 k\lang2052\'c7\'d2\'d3\'d0\lang1033 2^k -\lang2052  \lang1033 1\lang2052\'b8\'f6\'bd\'e1\'b5\'e3\'b5\'c4\'b6\'fe\'b2\'e6\'ca\'f7\'a1\'a3\'d4\'da\'c2\'fa\'b6\'fe\'b2\'e6\'ca\'f7\'d6\'d0\'c3\'bf\'b2\'e3\'bd\'e1\'b5\'e3\'b6\'bc\'ca\'c7\'c2\'fa\'b5\'c4\'a1\'a3\par

\pard\b\fs32\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'c9\'ee\'b6\'c8\'ce\'aa\lang1033 k\lang2052\'a3\'ac\'bd\'e1\'b5\'e3\'ca\'fd\'ce\'aa\lang1033 n\lang2052\'b5\'c4\'b6\'fe\'b2\'e6\'ca\'f7\'a3\'ac\'c8\'e7\'b9\'fb\'c6\'e4\lang1033 1~n\lang2052\'bd\'e1\'b5\'e3\'b5\'c4\'ce\'bb\'d6\'c3\'b1\'e0\'ba\'c5\'b7\'d6\'b1\'f0\'d3\'eb\'c2\'fa\'b6\'fe\'b2\'e6\'ca\'f7\lang1033 1~n\lang2052\'bd\'e1\'b5\'e3\'ce\'bb\'d6\'c3\'b1\'e0\'ba\'c5\'d2\'bb\'d2\'bb\'b6\'d4\'d3\'a6\'a3\'ac\'d4\'f2\'ce\'aa\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'a1\'a3\par
\f2\u11088?\f1\'c2\'fa\'b6\'fe\'b2\'e6\'ca\'f7\'b1\'d8\'ce\'aa\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'a1\'a3\par
\par

\pard\ul\b\f0\fs40\'b6\'fe\'b2\'e6\'ca\'f7\'cb\'b3\'d0\'f2\'b4\'e6\'b4\'a2\'a3\'a8\'ca\'fd\'d7\'e9\'b7\'bd\'ca\'bd\'a3\'a9\ulnone\b0\f1\fs24\par

\pard\fi300\f2\u11088?\f1\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'b4\'e6\'b4\'a2\'a3\'ba\'d4\'da\'ca\'fd\'d7\'e9\lang1033 arr[i]\lang2052\'d6\'d0\'b4\'e6\'b7\'c5\'b1\'e0\'ba\'c5\lang1033 i\lang2052\'b5\'c4\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'bd\'e1\'b5\'e3\'a1\'a3\'bf\'c9\'d2\'d4\'c0\'fb\'d3\'c3\'cf\'e0\'b9\'d8\'d0\'d4\'d6\'ca\'cd\'c6\'cb\'e3\'b3\'f6\'b8\'b8\lang1033 /\lang2052\'d7\'d3\'c5\'ae\lang1033 /\lang2052\'d0\'d6\'b5\'dc\'bd\'e1\'b5\'e3\'a1\'a3\'ca\'c7\'d7\'ee\'bc\'f2\'b5\'a5\'d7\'ee\'ca\'a1\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\'b5\'c4\'b4\'e6\'b4\'a2\'b7\'bd\'ca\'bd\'a1\'a3\par
\f2\u11088?\f1\'d2\'bb\'b0\'e3\'b6\'fe\'b2\'e6\'ca\'f7\'b4\'e6\'b4\'a2\'a3\'ba\'b1\'d8\'d0\'eb\'b7\'c2\'d5\'d5\'cd\'ea\'c8\'ab\'b6\'fe\'b2\'e6\'ca\'f7\'b6\'d4\'bd\'e1\'b5\'e3\'bd\'f8\'d0\'d0\'b1\'e0\'ba\'c5\'b4\'e6\'b4\'a2\'a1\'a3\'d3\'f6\'b5\'bd\'bf\'d5\'d7\'d3\'ca\'f7\'d3\'a6\'b8\'c3\'bc\'d9\'b6\'a8\'d3\'d0\'b4\'cb\'d7\'d3\'ca\'f7\'bd\'f8\'d0\'d0\'b1\'e0\'ba\'c5\'a3\'ac\'b2\'a2\'d4\'da\'ca\'fd\'d7\'e9\'d6\'d0\'c1\'f4\'b3\'f6\'ce\'bb\'d6\'c3\'a1\'a3\par
\par

\pard\ul\b\f0\fs40\'b6\'fe\'b2\'e6\'ca\'f7\'c1\'b4\'ca\'bd\'b4\'e6\'b4\'a2\'a3\'a8\'b6\'fe\'b2\'e6\'c1\'b4\'b1\'ed\'a3\'a9\ulnone\b0\f1\fs24\par
\b\fs32\lang1033 C++\lang2052\'c0\'e0\'b6\'a8\'d2\'e5\'a3\'ba\b0\fs24\par

\pard\fi300\lang1033 template<class T> struct Node\par
\{\par
\tab T data;\par
\tab Node<T> * lchild, *rchild;\par
\tab\par
\tab Node(T & item, Node<T> * l, Node<T> * r) \{ data = item; lchild = l; rchild = r; \}\par
\};\par
\par
template<class T> class BinaryTree\par
\{\par
private:\par
\tab Node<T> * root;\tab //\'b8\'f9\'bd\'e1\'b5\'e3\par
\par
\tab //\'bd\'e1\'b5\'e3\'b1\'e9\'c0\'fa\'a3\'a8\'b5\'dd\'b9\'e9\'a3\'a9\par
\tab void PreOrder(Node<T> * subTree, void(*visit)(Node<T> * p));//\'c7\'b0\'d0\'f2\'b1\'e9\'c0\'fa\'ba\'af\'ca\'fd\'a3\'a8\'b5\'dd\'b9\'e9\'a3\'a9\par
\tab void InOrder(Node<T> * subTree, void(*visit)(Node<T> * p));//\'d6\'d0\'d0\'f2\'b1\'e9\'c0\'fa\'ba\'af\'ca\'fd\'a3\'a8\'b5\'dd\'b9\'e9\'a3\'a9\par
\tab void PostOrder(Node<T> * subTree, void(*visit)(Node<T> * p));//\'ba\'f3\'d0\'f2\'b1\'e9\'c0\'fa\'ba\'af\'ca\'fd\'a3\'a8\'b5\'dd\'b9\'e9\'a3\'a9\par
\tab //\'b6\'fe\'b2\'e6\'ca\'f7\'b8\'df\'b6\'c8\'a3\'a8\'b5\'dd\'b9\'e9\'a3\'a9\par
\tab int Height(Node<T> * subTree) const;\par
\tab //\'b8\'b4\'d6\'c6\'a3\'a8\'b5\'dd\'b9\'e9\'a3\'a9\par
\tab Node<T> * Copy(Node<T> * origin);\par
public:\par
\tab BinaryTree() :root(NULL) \{\}\par
\tab BinaryTree(Node<T> * r) :root(r) \{\}\par
\tab BinaryTree(BinaryTree<T> & s) \{ root = Copy(s.root); \}\par
\tab ~BinaryTree() \{ destroy(root); \}\par
\par
\tab //\'b6\'fe\'b2\'e6\'ca\'f7\'b1\'e9\'c0\'fa\par
\tab void PreOrderTraversal(void(*visit)(Node<T> * p)) \{ PreOrder(root, visit); \}//visit\'ce\'aa\'ba\'af\'ca\'fd\'d6\'b8\'d5\'eb\'d0\'ce\'b2\'ce\par
\tab void InOrderTraversal(void(*visit)(Node<T> * p)) \{ InOrder(root, visit); \}\par
\tab void PostOrderTraversal(void(*visit)(Node<T> * p)) \{ PostOrder(root, visit); \}\par
\tab //\'b6\'fe\'b2\'e6\'ca\'f7\'b8\'df\'b6\'c8\par
\tab int Height() const \{ return Height(root); \}\par
\};\par
\par
\par

\pard\qc\b\f0\fs64\lang2052\'b5\'da\'c8\'fd\'bd\'da \'b6\'fe\'b2\'e6\'ca\'f7\'b1\'e9\'c0\'fa\'ba\'cd\'cf\'df\'cb\'f7\'b6\'fe\'b2\'e6\'ca\'f7\b0\f1\fs24\par

\pard\ul\b\f0\fs40\'b6\'fe\'b2\'e6\'ca\'f7\'b1\'e9\'c0\'fa\par
\ulnone\f1\fs32\'d7\'a2\'d2\'e2\'a3\'ba\ul\f0\fs40\par

\pard\fi300\ulnone\b0\f2\fs24\u11088?\f1\'b6\'d4\'d3\'da\'d2\'b6\'d7\'d3\'bd\'e1\'b5\'e3\'a3\'ac\'c8\'fd\'d6\'d6\'b1\'e9\'c0\'fa\'b4\'ce\'d0\'f2\'ca\'c7\'d2\'bb\'d1\'f9\'b5\'c4\'a1\'a3\par
\f2\u11088?\f1\'b6\'d4\'d3\'da\'c3\'bf\'d6\'d6\'b1\'e9\'c0\'fa\'a3\'ac\'ca\'f7\'d6\'d0\'c3\'bf\'b8\'f6\'bd\'e1\'b5\'e3\'b6\'bc\'d2\'aa\'be\'ad\'b9\'fd\'c8\'fd\'b4\'ce\'a1\'a3\par

\pard\b\fs32\'c7\'b0\'d0\'f2\'b1\'e9\'c0\'fa\lang1033 VLR\lang2052\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'b8\'f9\'d7\'f3\'d3\'d2\'b4\'ce\'d0\'f2\'a1\'a3\'b5\'da\'d2\'bb\'b4\'ce\'d3\'f6\'b5\'bd\'bd\'e1\'b5\'e3\'c1\'a2\'bc\'b4\'b7\'c3\'ce\'ca\'a1\'a3\par
template<class T>\f3\lang1033  \f1\lang2052 void BinaryTree<T>::PreOrder(Node<T>* subTree, void(*visit)(Node<T>*p))\par
\{\par
\tab if (subTree != NULL)\par
\tab\{\par
\tab\tab visit(subTree);\par
\tab\tab PreOrder(subTree->lchild, visit);\par
\tab\tab PreOrder(subTree->rchild, visit);\par
\tab\}\par
\}\par

\pard\b\fs32\'d6\'d0\'d0\'f2\'b1\'e9\'c0\'fa\lang1033 LVR\lang2052\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'d7\'f3\'b8\'f9\'d3\'d2\'b4\'ce\'d0\'f2\'a1\'a3\'b5\'da\'b6\'fe\'b4\'ce\'be\'ad\'b9\'fd\'bd\'e1\'b5\'e3\'ca\'b1\'b7\'c3\'ce\'ca\'a1\'a3\par
template<class T>\f3\lang1033  \f1\lang2052 void BinaryTree<T>::InOrder(Node<T>* subTree, void(*visit)(Node<T>*p))\par
\{\par
\tab if (subTree != NULL)\par
\tab\{\par
\tab\tab InOrder(subTree->lchild, visit);\par
\tab\tab visit(subTree);\par
\tab\tab InOrder(subTree->rchild, visit);\par
\tab\}\par
\}\par

\pard\b\fs32\'ba\'f3\'d0\'f2\'b1\'e9\'c0\'fa\lang1033 LRV\lang2052\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'d7\'f3\'d3\'d2\'b8\'f9\'b4\'ce\'d0\'f2\'a1\'a3\'d7\'ee\'ba\'f3\'d2\'bb\'b4\'ce\'be\'ad\'b9\'fd\'bd\'e1\'b5\'e3\'ca\'b1\'b7\'c3\'ce\'ca\'a1\'a3\par
template<class T>\f3\lang1033  \f1\lang2052 void BinaryTree<T>::PostOrder(Node<T>* subTree, void(*visit)(Node<T>*p))\par
\{\par
\tab if (subTree != NULL)\par
\tab\{\par
\tab\tab PostOrder(subTree->lchild, visit);\par
\tab\tab PostOrder(subTree->rchild, visit);\par
\tab\tab visit(subTree);\par
\tab\}\par
\}\par

\pard\ul\b\f0\fs40\'b6\'fe\'b2\'e6\'ca\'f7\'b1\'e9\'c0\'fa\'b5\'c4\'d3\'a6\'d3\'c3\ulnone\b0\f1\fs24\par
\b\fs32\'ba\'f3\'d0\'f2\'b1\'e9\'c0\'fa\'d3\'a6\'d3\'c3\lang1033 -\lang2052\'bc\'c6\'cb\'e3\'b6\'fe\'b2\'e6\'ca\'f7\'b8\'df\'b6\'c8\'a3\'a8\'c9\'ee\'b6\'c8\'a3\'a9\'a3\'ba\par

\pard\fi300\b0\fs24\lang1033 template<class T> int BinaryTree<T>::Height(Node<T>* subTree) const\par
\{\par
\tab if (subTree == NULL) return 0;\par
\tab else\par
\tab\{\par
\tab\tab int h_left = Height(subTree->lchild);\par
\tab\tab int h_right = Height(subTree->rchild);\par
\tab\tab return (h_left < h_right) ? (h_right + 1) : (h_left + 1);\par
\tab\}\par
\}\par

\pard\b\fs32\lang2052\'c7\'b0\'d0\'f2\'b1\'e9\'c0\'fa\'d3\'a6\'d3\'c3\lang1033 -\lang2052\'b8\'b4\'d6\'c6\'b9\'b9\'d4\'ec\'ba\'af\'ca\'fd\'ca\'b5\'cf\'d6\'a3\'ba\b0\fs24\par

\pard\fi300 template<class T> Node<T>* BinaryTree<T>::Copy(Node<T>* origin)\par
\{\par
\tab if(origin == NULL) return NULL;\par
\tab Node <T> * newNode = new Node<T>(\par
\tab\tab origin->data, \par
\tab\tab Copy(origin->lchild), \par
\tab\tab Copy(origin->rchild)\par
\tab\tab );\par
\tab return newNode;\par
\}\par
\par

\pard\ul\b\f0\fs40\'cf\'df\'cb\'f7\'b6\'fe\'b2\'e6\'ca\'f7\par

\pard\fi300\ulnone\b0\f2\fs24\u11088?\f1\'d4\'da\'d3\'d0\lang1033 n\lang2052\'b8\'f6\'bd\'e1\'b5\'e3\'b5\'c4\'b6\'fe\'b2\'e6\'c1\'b4\'b1\'ed\'d6\'d0\'b9\'b2\'d3\'d0\lang1033 2n\lang2052\'b8\'f6\'c1\'b4\'d3\'f2\'a3\'ac\'b5\'ab\'d6\'bb\'d3\'d0\lang1033 n-1\lang2052\'b8\'f6\'d3\'d0\'d3\'c3\'b5\'c4\'b7\'c7\'bf\'d5\'c1\'b4\'d3\'f2\'a1\'a3\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'d3\'c3\'ca\'a3\'cf\'c2\'b5\'c4\lang1033 n+1\lang2052\'b8\'f6\'bf\'d5\'c1\'b4\'d3\'f2\'c0\'b4\'b4\'e6\'b7\'c5\'b1\'e9\'c0\'fa\'b9\'fd\'b3\'cc\'d6\'d0\'bd\'e1\'b5\'e3\'b5\'c4\'c7\'b0\'c7\'fd\'ba\'cd\'ba\'f3\'bc\'cc\'d0\'c5\'cf\'a2\'a1\'a3\par
\par

\pard\b\fs32\'cf\'df\'cb\'f7\'b6\'fe\'b2\'e6\'ca\'f7\'b5\'c4\'bd\'a8\'c1\'a2\'a3\'ba\b0\f4\fs24\par

\pard\fi300\f2\u11088?\f1\'c3\'bf\'b8\'f6\'bd\'e1\'b5\'e3\'c9\'e8\'d6\'c3\'c1\'bd\'b8\'f6\'b1\'ea\'d6\'be\lang1033 ltag\lang2052\'ba\'cd\lang1033 rtag\lang2052\'a1\'a3\par
\f2\u11088?\f1\'c8\'f4\'bd\'da\'b5\'e3\'d3\'d0\'d7\'f3\'d7\'d3\'ca\'f7\'a3\'ac\'d4\'f2\lang1033 ltag==0\lang2052\'a3\'ac\'b1\'ea\'c3\'f7\lang1033 LChild\lang2052\'d3\'f2\'b4\'e6\'b7\'c5\'b5\'c4\'ca\'c7\'d6\'b8\'cf\'f2\'d7\'f3\'d7\'d3\'c5\'ae\'b5\'c4\'bd\'e1\'b5\'e3\'b5\'c4\'d6\'b8\'d5\'eb\'a1\'a3\'b7\'f1\'d4\'f2\lang1033 ltag==1\lang2052\'a3\'ac\'b1\'ea\'c3\'f7\lang1033 LChild\lang2052\'d3\'f2\'b4\'e6\'b7\'c5\'b5\'c4\'ca\'c7\'d6\'b8\'cf\'f2\'c7\'b0\'c7\'fd\'bd\'e1\'b5\'e3\'b5\'c4\'cf\'df\'cb\'f7\'a1\'a3\par
\f2\u11088?\f1\'c8\'f4\'bd\'da\'b5\'e3\'d3\'d0\'d3\'d2\'d7\'d3\'ca\'f7\'a3\'ac\'d4\'f2\lang1033 rtag==0\lang2052\'a3\'ac\'b1\'ea\'c3\'f7\lang1033 RChild\lang2052\'d3\'f2\'b4\'e6\'b7\'c5\'b5\'c4\'ca\'c7\'d6\'b8\'cf\'f2\'d3\'d2\'d7\'d3\'c5\'ae\'b5\'c4\'bd\'e1\'b5\'e3\'b5\'c4\'d6\'b8\'d5\'eb\'a1\'a3\'b7\'f1\'d4\'f2\lang1033 rtag==1\lang2052\'a3\'ac\'b1\'ea\'c3\'f7\lang1033 RChild\lang2052\'d3\'f2\'b4\'e6\'b7\'c5\'b5\'c4\'ca\'c7\'d6\'b8\'cf\'f2\'ba\'f3\'bc\'cc\'bd\'e1\'b5\'e3\'b5\'c4\'cf\'df\'cb\'f7\'a1\'a3\par
\par

\pard\b\fs32\'cf\'df\'cb\'f7\'b6\'fe\'b2\'e6\'ca\'f7\'b1\'e9\'c0\'fa\'a3\'a8\'d2\'d4\'d6\'d0\'d0\'f2\'ce\'aa\'c0\'fd\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f2\u11088?\f1\'c0\'fb\'d3\'c3\'d6\'d0\'d0\'f2\'cf\'df\'cb\'f7\'b1\'e9\'c0\'fa\'b6\'fe\'b2\'e6\'ca\'f7\'ca\'b1\'a3\'ac\'cf\'c8\'c0\'fb\'d3\'c3\lang1033 First()\lang2052\'ba\'af\'ca\'fd\'d5\'d2\'b5\'bd\'b6\'fe\'b2\'e6\'ca\'f7\'d4\'da\'d6\'d0\'d0\'f2\'d0\'f2\'c1\'d0\'cf\'c2\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'bd\'e1\'b5\'e3\'a3\'ac\'c8\'bb\'ba\'f3\'b0\'d1\'cb\'fb\'d7\'f7\'ce\'aa\'b5\'b1\'c7\'b0\'bd\'e1\'b5\'e3\'c0\'fb\'d3\'c3\'ba\'f3\'bc\'cc\'bd\'e1\'b5\'e3\'ba\'af\'ca\'fd\lang1033 Next()\lang2052\'d6\'f0\'b8\'f6\'b7\'c3\'ce\'ca\'a3\'ac\'d6\'b1\'b5\'bd\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'bd\'e1\'b5\'e3\'a1\'a3\par
\f2\u11088?\f1\lang1033 Next()\lang2052\'ba\'af\'ca\'fd\'a3\'ba\'b4\'d3\'b5\'b1\'c7\'b0\'d6\'b8\'b6\'a8\'bd\'e1\'b5\'e3\'d1\'b0\'d5\'d2\'ba\'f3\'bc\'cc\'bd\'e1\'b5\'e3\'b5\'c4\'ba\'af\'ca\'fd\'a1\'a3\'c8\'e7\'b9\'fb\lang1033 rtag==0\lang2052\'a3\'ac\'ba\'f3\'bc\'cc\'ce\'aa\'b5\'b1\'c7\'b0\'bd\'e1\'b5\'e3\'d3\'d2\'d7\'d3\'ca\'f7\'b5\'c4\'d6\'d0\'d0\'f2\'cf\'c2\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'bd\'e1\'b5\'e3\'a1\'a3\'c8\'e7\'b9\'fb\lang1033 rtag==1\lang2052\'a3\'ac\'ba\'f3\'bc\'cc\'ce\'aa\lang1033 RChild\lang2052\'d6\'b8\'cf\'f2\'b5\'c4\'bd\'e1\'b5\'e3\'a1\'a3\par
\par

\pard\qc\b\f0\fs64\'b5\'da\'cb\'c4\'bd\'da \'ca\'f7\'d3\'eb\'c9\'ad\'c1\'d6\b0\f1\fs24\par

\pard\ul\b\f0\fs40\'d2\'bb\'b0\'e3\'ca\'f7\'a3\'a8\'b6\'e0\'b2\'e6\'ca\'f7\'a3\'a9\'b5\'c4\'b4\'e6\'b4\'a2\'b1\'ed\'ca\'be\ulnone\b0\f1\fs24\par

\pard\fi300\'b9\'e3\'d2\'e5\'b1\'ed\'ca\'be\'b7\'a8\'a3\'ba\par
\'b8\'b8\'d6\'b8\'d5\'eb\'b1\'ed\'ca\'be\'b7\'a8\'a3\'ba\par
\'d7\'d3\'c5\'ae\'c1\'b4\'b1\'ed\'b1\'ed\'ca\'be\'b7\'a8\'a3\'ba\par
\'d7\'d3\'c5\'ae\f3\lang1033 -\f1\lang2052\'d0\'d6\'b5\'dc\'c1\'b4\'b1\'ed\'b1\'ed\'ca\'be\'b7\'a8\'a3\'ba\par
}
