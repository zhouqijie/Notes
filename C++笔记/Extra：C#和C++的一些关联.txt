******************C#和C++的一些根本区别***************************************************************
*******************************************************************************************************
*******************************************************************************************************

******************关于引用、托管、指针****************************
一、指针和引用

C++没有值类型和引用类型的概念。C++的对象是C#值类型。C++的指针类似于C#的引用类型，指针的话用new开辟，并将指针指向此对象。指针就跟C#的引用类似（不是相同）。

C#中对于引用类型的ref传参，实参把地址赋给形参，实际上是两个地址指向同一个对象。(CSDN: 只要记住一点：对于值类型来说传的是值的地址，对于引用类型来说传的是地址的地址。)

二、C#托管类型/非托管类型和C#指针

1、C#托管类型包括"引用类型"以及"包含引用类型或托管类型的结构体"。非托管类型包括枚举、指针和不包含引用类型成员（字段、属性）的结构体。
2、在C#中不能获取托管类对象的地址。垃圾回收的执行具有不确定性，垃圾回收执行时，会压缩托管堆，此时托管堆上的变量地址都会更改。





*************************友元*************************************
1、C#和JAVA都没有友元类和友元函数。C++中友元也不是必须的，他的主要作用是提高访问效率（访问内部成员比外部成员块，可以不考虑封装。）。
2、可以用Internal说明成员只能在当前程序集使用，类似C++友元。




**********************new关键字***********************************
※含义：动态分配内存空间。
※C#中的new调用构造函数创建一个对象。（如果是结构体，则不会分配托管堆内存）
※C++的new创建一个指向堆对象的指针。


************************C++对象切片*********************************
※C#、Java中没有对象切片概念，因为所有对象都是引用。
※C++的对象切片是指派生类复制构造基类对象，会丢失一部分信息。 （例如：Person person1 = man1;）



************************虚函数重写*********************************
---------C++------------
※虚函数修饰符：virtual     ->      virtual(可省略)      ->virtual(可省略)      -> 
※基类函数被覆盖/重写后还能加上域限定符访问。    （实质是被隐藏了？？？）
※只有通过基类指针或引用才会发生动态绑定。因为基类指针/引用可以指向派生类对象，但是基类对象不能表示派生类对象。（切片问题）

----------C#------------
※虚函数修饰符：virtual     ->     override         ->         override     ->
※子类中直接编写同名方法只是隐藏父类方法（可以加new关键字），用override 关键字才能实现方法重写。





*********************************************************************************************************************
*******************************************************细节区别******************************************************
*********************************************************************************************************************

************************抽象类***********************************
⭐C#抽象类需要用abstract关键字显式声明。

**********************域限定符"::"*********************************
⭐C#统一用"."进行限定。

**********************语法格式***********************************
⭐类声明格式格式：C++类声明花括号后面要加分号";"

**********************数组格式***********************************
⭐二维数组格式：C++的二维数组a[i][j]，而C#的二维数组a[i, j]。
⭐数组初始化：C++：int arr[3] = {1, 2, 3};     C#：int[] arr = new int[3]{1, 2, 3};

**********************枚举***********************************
⭐C++在类中定义枚举，可以直接类名::枚举值调用。



