{\rtf1\ansi\ansicpg936\deff0\nouicompat\deflang1033\deflangfe2052{\fonttbl{\f0\fnil\fcharset134 \'ba\'da\'cc\'e5;}{\f1\fnil\fcharset1 Segoe UI Symbol;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fswiss\fcharset0 Calibri;}{\f4\fnil Segoe UI Symbol;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\qc\b\f0\fs64\lang2052\'d0\'f2 \'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\par

\pard\ul\fs40\lang1033 ------\lang2052\'ca\'fd\'be\'dd\'b5\'c4\'b8\'c5\'c4\'ee\lang1033 ------\lang2052\par

\pard\fi300\ulnone\b0\f1\fs24\u11088?\f2\'ca\'fd\'be\'dd\'ca\'c7\'d0\'c5\'cf\'a2\'b5\'c4\'d4\'d8\'cc\'e5\'a3\'ac\'ca\'c7\'c3\'e8\'ca\'f6\'bf\'cd\'b9\'db\'ca\'c2\'ce\'ef\'b5\'c4\'ca\'fd\'a1\'a2\'d7\'d6\'b7\'fb\'a3\'ac\'d2\'d4\'bc\'b0\'cb\'f9\'d3\'d0\'c4\'dc\'ca\'e4\'c8\'eb\'b5\'bd\'bc\'c6\'cb\'e3\'bb\'fa\'d6\'d0\'b2\'a2\'b1\'bb\'bc\'c6\'cb\'e3\'bb\'fa\'ca\'b6\'b1\'f0\'b4\'a6\'c0\'ed\'b5\'c4\'b7\'fb\'ba\'c5\'b5\'c4\'bc\'af\'ba\'cf\'a1\'a3\b\f0\fs64\par

\pard\ul\fs40\lang1033 ------\lang2052\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'b5\'c4\'b8\'c5\'c4\'ee\lang1033 ------\lang2052\par

\pard\fi300\ulnone\b0\f1\fs24\u11088?\f2\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'b5\'c4\'b8\'c5\'c4\'ee\'a3\'ba\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'d3\'c9\'c4\'b3\'d2\'bb\'ca\'fd\'be\'dd\'d4\'aa\'cb\'d8\'b5\'c4\'bc\'af\'ba\'cf\'ba\'cd\'b8\'c3\'bc\'af\'ba\'cf\'d6\'d0\'ca\'fd\'be\'dd\'d4\'aa\'cb\'d8\'d6\'ae\'bc\'e4\'b5\'c4\'b9\'d8\'cf\'b5\'b9\'b9\'b3\'c9\'a1\'a3\f3\lang1033 DataStructure = \{ D, R\}\par
\f1\lang2052\u11088?\f3\lang1033 4\f2\lang2052\'d6\'d6\'bb\'f9\'b1\'be\'bd\'e1\'b9\'b9\'a3\'ba\'bc\'af\'ba\'cf\'a1\'a2\'cf\'df\'d0\'d4\'bd\'e1\'b9\'b9\'a1\'a2\'ca\'f7\'d7\'b4\'bd\'e1\'b9\'b9\'a1\'a2\'cd\'f8\'d7\'b4\'bd\'e1\'b9\'b9\'a3\'a8\'cd\'bc\'a3\'a9\'a1\'a3\par

\pard\b\fs32\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'c8\'fd\'b8\'f6\'b7\'bd\'c3\'e6\'a3\'ba\b0\fs24\par

\pard\fi300\f3\lang1033 1\f2\lang2052\'a1\'a2\'ca\'fd\'be\'dd\'b3\'c9\'d4\'b1\'d2\'d4\'bc\'b0\'cb\'fc\'c3\'c7\'cf\'e0\'bb\'a5\'d6\'ae\'bc\'e4\'b5\'c4\'c2\'df\'bc\'ad\'b9\'d8\'cf\'b5\'a3\'ac\'d2\'b2\'b3\'c6\'ce\'aa\'ca\'fd\'be\'dd\'b5\'c4\'c2\'df\'bc\'ad\'bd\'e1\'b9\'b9\'a3\'ac\'bc\'f2\'b3\'c6\'ce\'aa\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'a3\'bb\par
\f3\lang1033 2\f2\lang2052\'a1\'a2\'ca\'fd\'be\'dd\'b5\'c4\'b4\'e6\'b4\'a2\'b1\'ed\'ca\'be\'a3\'ac\'d2\'b2\'b3\'c6\'ca\'fd\'be\'dd\'b5\'c4\'ce\'ef\'c0\'ed\'bd\'e1\'b9\'b9\'a3\'ac\'bc\'f2\'b3\'c6\'ce\'aa\'b4\'e6\'b4\'a2\'bd\'e1\'b9\'b9\'a1\'a3\par
\f3\lang1033 3\f2\lang2052\'a1\'a2\'d5\'e2\'d6\'d6\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'b5\'c4\'cf\'e0\'b9\'d8\'b2\'d9\'d7\'f7\'bc\'b0\'ca\'b5\'cf\'d6\'a1\'a3\f3\lang1033\par

\pard\b\f2\fs32\lang2052\'c2\'df\'bc\'ad\'bd\'e1\'b9\'b9\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'d6\'f7\'d2\'aa\'b7\'d6\'ce\'aa\'a3\'ba\'cf\'df\'d0\'d4\'bd\'e1\'b9\'b9\'a1\'a2\'b7\'c7\'cf\'df\'d0\'d4\'bd\'e1\'b9\'b9\'a1\'a3\par

\pard\b\fs32\'b4\'e6\'b4\'a2\'bd\'e1\'b9\'b9\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'d6\'f7\'d2\'aa\'b7\'d6\'ce\'aa\'a3\'ba\'cb\'b3\'d0\'f2\'b4\'e6\'b4\'a2\'a1\'a2\'c1\'b4\'bd\'d3\'b4\'e6\'b4\'a2\'a1\'a2\'cb\'f7\'d2\'fd\'b4\'e6\'b4\'a2\'a1\'a2\'c9\'a2\'c1\'d0\'b4\'e6\'b4\'a2\'a1\'a3\par
\par

\pard\ul\b\f0\fs40\lang1033 ------\lang2052\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'b5\'c4\'b3\'e9\'cf\'f3\'d0\'ce\'ca\'bd\lang1033 ------\lang2052\par
\ulnone\f2\fs32\'b3\'e9\'cf\'f3\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'b8\'c5\'c4\'ee\'a3\'ba\'b3\'e9\'cf\'f3\'b5\'c4\'b1\'be\'d6\'ca\'be\'cd\'ca\'c7\'b3\'f3\'ce\'c5\'c8\'a5\'b7\'b4\'d3\'b3\'ce\'ca\'cc\'e2\'b1\'be\'d6\'ca\'b5\'c4\'b6\'ab\'ce\'f7\'a3\'ac\'ba\'f6\'c2\'d4\'b7\'c7\'b1\'be\'d6\'ca\'b5\'c4\'cf\'b8\'bd\'da\'a1\'a3\par

\pard\b\fs32\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'b8\'c5\'c4\'ee\'a3\'ba\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'ca\'c7\'d6\'b8\'d2\'bb\'d6\'d6\'c0\'e0\'d0\'cd\'a3\'ac\'d2\'d4\'bc\'b0\'b6\'a8\'d2\'e5\'d3\'f2\'d5\'e2\'b8\'f6\'d6\'b5\'bc\'af\'ba\'cf\'c9\'cf\'b5\'c4\'d2\'bb\'d7\'e9\'b2\'d9\'d7\'f7\'b5\'c4\'d7\'dc\'b3\'c6\'a1\'a3\par

\pard\b\fs32\'b3\'e9\'cf\'f3\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'a3\'a8\lang1033 ADT\lang2052\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'b8\'c5\'c4\'ee\'a3\'ba\'b3\'e9\'cf\'f3\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'cd\'a8\'b3\'a3\'ca\'c7\'d6\'b8\'d3\'c9\'d3\'c3\'bb\'a7\'b6\'a8\'d2\'e5\'a3\'ac\'d3\'c3\'d2\'d4\'b1\'ed\'ca\'be\'d3\'a6\'d3\'c3\'ce\'ca\'cc\'e2\'b5\'c4\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'a3\'ac\'ca\'c7\'bd\'ab\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'d7\'f7\'ce\'aa\'d2\'bb\'b8\'f6\'c8\'ed\'bc\'fe\'b9\'b9\'b3\'c9\'b5\'c4\'ca\'b5\'cf\'d6\'a1\'a3\par
\f1\u11088?\f2\'b3\'e9\'cf\'f3\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'d3\'c9\'bb\'f9\'b1\'be\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'d7\'e9\'b3\'c9\'a3\'ac\'b2\'a2\'b0\'fc\'ba\'ac\'d2\'bb\'d7\'e9\'cf\'e0\'b9\'d8\'b5\'c4\'b2\'d9\'d7\'f7\'a1\'a3\par
\f1\u11088?\f2\'d4\'da\lang1033 C++\lang2052\'d3\'ef\'d1\'d4\'d6\'d0\'d3\'c3\lang1033 struct\lang2052\'bb\'f2\lang1033 class\lang2052\'b6\'a8\'d2\'e5\'b3\'e9\'cf\'f3\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'a1\'a3\par
\f1\u11088?\f2\lang1033 ADT\lang2052\'b5\'c4\'d0\'ce\'ca\'bd\'bb\'af\'b6\'a8\'d2\'e5\'ca\'c7\'c8\'fd\'d4\'aa\'d7\'e9\'a3\'ba\lang1033 ADT=\{ (\lang2052\'ca\'fd\'be\'dd\'b6\'d4\'cf\'f3\lang1033 ),  S(\lang2052\'bd\'e1\'b9\'b9\'b9\'d8\'cf\'b5\lang1033 ),  P(\lang2052\'bb\'f9\'b1\'be\'b2\'d9\'d7\'f7\lang1033 ) \}\par
\par

\pard\ul\b\f0\fs40 ------\lang2052\'cb\'e3\'b7\'a8\lang1033 (Algorithm)------\par

\pard\fi300\ulnone\b0\f1\fs24\lang2052\u11088?\f2\'a3\'bf\'a3\'ba\'cb\'e3\'b7\'a8\'ca\'c7\'b6\'d4\'cc\'d8\'b6\'a8\'ce\'ca\'cc\'e2\'c7\'f3\'bd\'e2\'b2\'bd\'d6\'e8\'b5\'c4\'d2\'bb\'d6\'d6\'c3\'e8\'ca\'f6\'a1\'a3\par
\f1\u11088?\f2\'cb\'e3\'b7\'a8\'ca\'c7\'d2\'bb\'b8\'f6\'d3\'d0\'c7\'ee\'b5\'c4\'d6\'b8\'c1\'ee\'bc\'af\'a3\'ac\'d5\'e2\'d0\'a9\'d6\'b8\'c1\'ee\'ce\'aa\'bd\'e2\'be\'f6\'c4\'b3\'d2\'bb\'cc\'d8\'b6\'a8\'ce\'ca\'cc\'e2\'b9\'e6\'b6\'a8\'c1\'cb\'d2\'bb\'b8\'f6\'d4\'cb\'cb\'e3\'d0\'f2\'c1\'d0\'a1\'a3\lang1033\par

\pard\b\fs32\lang2052\'cb\'e3\'b7\'a8\'b5\'c4\'cc\'d8\'d0\'d4\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'d3\'d0\'ca\'e4\'c8\'eb\'a3\'ba\'d2\'bb\'b8\'f6\'cb\'e3\'b7\'a8\'d3\'a6\'d3\'d0\f3\lang1033 0\f2\lang2052\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'ca\'e4\'c8\'eb\'a1\'a3\par
\f1\u11088?\f2\'d3\'d0\'ca\'e4\'b3\'f6\'a3\'ba\'d2\'bb\'b8\'f6\'cb\'e3\'b7\'a8\'d3\'a6\'d3\'d0\'d2\'bb\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'ca\'e4\'b3\'f6\'a1\'a3\par
\f1\u11088?\f2\'c8\'b7\'b6\'a8\'d0\'d4\'a3\'ba\'cb\'e3\'b7\'a8\'d6\'d0\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'b2\'bd\'d6\'e8\'b6\'bc\'d3\'d0\'c8\'b7\'b6\'a8\'ba\'ac\'d2\'e5\'a3\'ac\'ce\'de\'b6\'fe\'d2\'e5\'d0\'d4\'a1\'a3\par
\f1\u11088?\f2\'d3\'d0\'c7\'ee\'d0\'d4\'a3\'ba\'d3\'d0\'cf\'de\'b2\'bd\'d6\'e8\'a3\'ac\'b2\'bb\'c4\'dc\'ce\'de\'c7\'ee\'d1\'ad\'bb\'b7\'a1\'a3\par
\f1\u11088?\f2\'c4\'dc\'d0\'d0\'d0\'d4\'a3\'ba\'d2\'bb\'b8\'f6\'cb\'e3\'b7\'a8\'c3\'bf\'d2\'bb\'cc\'f5\'d4\'cb\'cb\'e3\'b6\'bc\'ca\'c7\'d7\'e3\'b9\'bb\'bb\'f9\'b1\'be\'b5\'c4\'a3\'ac\'cb\'fc\'c3\'c7\'d4\'ad\'d4\'f2\'c9\'cf\'b6\'bc\'c4\'dc\'b1\'bb\'bc\'c6\'cb\'e3\'bb\'fa\'d6\'b4\'d0\'d0\'a1\'a3\par

\pard\b\fs32\'b3\'cc\'d0\'f2\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'b3\'cc\'d0\'f2\'ba\'cd\'cb\'e3\'b7\'a8\'b2\'bb\'cd\'ac\'a3\'ac\'bf\'c9\'d2\'d4\'b2\'bb\'c2\'fa\'d7\'e3\'c9\'cf\'ca\'f6\'cc\'d8\'d0\'d4\'a1\'a3\par

\pard\b\fs32\'cb\'e3\'b7\'a8\'c9\'e8\'bc\'c6\'d2\'aa\'c7\'f3\'a3\'a8\'bc\'b4\'d0\'d4\'c4\'dc\'b1\'ea\'d7\'bc\'a3\'a9\'a3\'ba\par

\pard\fi300\b0\f3\fs24\lang1033 1\f2\lang2052\'a1\'a2\'d5\'fd\'c8\'b7\'d0\'d4\f3\lang1033 (correctness)\f2\lang2052\'a3\'ba\'c2\'fa\'d7\'e3\'d0\'e8\'c7\'f3\'a1\'a3\par
\f3\lang1033 2\f2\lang2052\'a1\'a2\'bf\'c9\'ca\'b9\'d3\'c3\'d0\'d4\f3\lang1033 (usability)\f2\lang2052\'b7\'a8\'c4\'dc\'ba\'dc\'b7\'bd\'b1\'e3\'b5\'d8\'ca\'b9\'d3\'c3\'a3\'a8\'d3\'c3\'bb\'a7\'d3\'d1\'ba\'c3\'d0\'d4\'a3\'a9\'a1\'a3\'d3\'d0\'b5\'c4\'b3\'c6\'ce\'aa\'cd\'a8\'d3\'c3\'d0\'d4\f3\lang1033 (generality)\f2\lang2052\'a1\'a3\par
\f3\lang1033 3\f2\lang2052\'a1\'a2\'bf\'c9\'b6\'c1\'d0\'d4\f3\lang1033 (readability)\f2\lang2052\'a3\'ba\'c8\'dd\'d2\'d7\'b9\'a9\'c8\'cb\'d4\'c4\'b6\'c1\'a1\'a3\par
\f3\lang1033 4\f2\lang2052\'a1\'a2\'d0\'a7\'c2\'ca\f3\lang1033 (efficiency)\f2\lang2052\'a3\'ba\'b4\'e6\'b4\'a2\'bf\'aa\'cf\'fa\'ba\'cd\'ca\'b1\'bc\'e4\'bf\'aa\'cf\'fa\'a1\'a3\par
\f3\lang1033 5\f2\lang2052\'a1\'a2\'bd\'a1\'d7\'b3\'d0\'d4\f3\lang1033 (robustnuss)\f2\lang2052\'a3\'ba\'c8\'dd\'b4\'ed\'b4\'a6\'c0\'ed\'a1\'a3\par
\f3\lang1033 6\f2\lang2052\'a1\'a2\'bc\'f2\'b5\'a5\'d0\'d4\f3\lang1033 (simplicity)\f2\lang2052\'a3\'ba\'cb\'e3\'b7\'a8\'d4\'bd\'bc\'f2\'b5\'a5\'a3\'ac\'b3\'f6\'b4\'ed\'c2\'ca\'d4\'bd\'b5\'cd\'a3\'ac\'bf\'c9\'bf\'bf\'d0\'d4\'d4\'bd\'b8\'df\'a1\'a3\par

\pard\ul\b\f0\fs40\lang1033 ------\lang2052\'cb\'e3\'b7\'a8\'d0\'a7\'c2\'ca\'b5\'c4\'b6\'c8\'c1\'bf\lang1033 ------\lang2052\par
\ulnone\f2\fs32\'ca\'c2\'ba\'f3\'cd\'b3\'bc\'c6\'a3\'a8\'ba\'f3\'c6\'da\'b2\'e2\'ca\'d4\'a3\'a9\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'d2\'c0\'c0\'b5\'d3\'b2\'bc\'fe\'ba\'cd\'d4\'cb\'d0\'d0\'bb\'b7\'be\'b3\'a3\'ac\'c3\'bb\'d3\'d0\'cc\'ab\'b4\'f3\'b5\'c4\'ca\'b5\'bc\'ca\'bc\'db\'d6\'b5\'a1\'a3\b\fs32\par

\pard\'ca\'c2\'c7\'b0\'b9\'c0\'bc\'c6\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'bf\'d5\'bc\'e4\'b8\'b4\'d4\'d3\'b6\'c8\'b6\'c8\'c1\'bf\'a3\'ba\'b0\'fc\'c0\'a8\'b9\'cc\'b6\'a8\'b2\'bf\'b7\'d6\'a3\'a8\'b4\'e6\'b7\'c5\'d6\'b8\'c1\'ee\'b4\'fa\'c2\'eb\'b5\'c4\'bf\'d5\'bc\'e4\'a3\'ac\'b3\'a3\'ca\'fd\'a1\'a2\'bc\'f2\'b5\'a5\'b1\'e4\'c1\'bf\'a1\'a2\'b6\'a8\'b3\'a4\'b3\'c9\'b7\'d6\'b1\'e4\'c1\'bf\'cb\'f9\'d5\'bc\'bf\'d5\'bc\'e4\'b5\'c8\'a3\'a9\'ba\'cd\'bf\'c9\'b1\'e4\'b2\'bf\'b7\'d6\'a3\'a8\'d3\'eb\'ce\'ca\'cc\'e2\'b9\'e6\'c4\'a3\'d3\'d0\'b9\'d8\'b5\'c4\'b1\'e4\'c1\'bf\'cb\'f9\'d5\'bc\'bf\'d5\'bc\'e4\'a1\'a2\'b5\'dd\'b9\'e9\'b9\'a4\'d7\'f7\'d5\'bb\'cb\'f9\'d5\'bc\'bf\'d5\'bc\'e4\'a1\'a2\'d2\'d4\'bc\'b0\'d4\'cb\'d0\'d0\'b9\'fd\'b3\'cc\'d6\'d0\f3\lang1033 new\f2\lang2052\'b6\'af\'cc\'ac\'ca\'b9\'d3\'c3\'b5\'c4\'bf\'d5\'bc\'e4\'a3\'a9\'a1\'a3\par
\f1\u11088?\f2\'ca\'b1\'bc\'e4\'b8\'b4\'d4\'d3\'b6\'c8\'b6\'c8\'c1\'bf\'a3\'ba\'d6\'f7\'d2\'aa\'b4\'d3\'b3\'cc\'d0\'f2\'bd\'e1\'b9\'b9\'d7\'c5\'ca\'d6\'a3\'ac\'cd\'b3\'bc\'c6\'cb\'e3\'b7\'a8\'b5\'c4\'b3\'cc\'d0\'f2\'b2\'bd\'ca\'fd\'a1\'a3\'a3\'a8\'d2\'bb\'b8\'f6\'d3\'ef\'be\'e4\'b1\'be\'c9\'ed\'b5\'c4\'b3\'cc\'d0\'f2\'b2\'bd\'ca\'fd\'b2\'bb\'d2\'bb\'b6\'a8\'b5\'c8\'d3\'da\'d3\'ef\'be\'e4\'d6\'b4\'d0\'d0\'d2\'bb\'b4\'ce\'cb\'f9\'be\'df\'d3\'d0\'b5\'c4\'b3\'cc\'d0\'f2\'b2\'bd\'ca\'fd\'a3\'a9\par

\pard\ul\b\f0\fs40\lang1033 ------\lang2052\'cb\'e3\'b7\'a8\'bd\'a5\'bd\'f8\'b1\'ed\'ca\'be\lang1033 ------\par
\ulnone\f2\fs32\lang2052\'bd\'a5\'bd\'f8\'ca\'b1\'bc\'e4\'b8\'b4\'d4\'d3\'b6\'c8\'a3\'ba\par

\pard\fi300\b0\fs24\lang1033 -----------\lang2052\'b4\'f3\lang1033 O\lang2052\'bd\'a5\'bd\'f8\'b1\'ed\'ca\'be\lang1033 (T(n) = O(f(n)))------------\par
\f1\lang2052\u11088?\f2\'d3\'c3\'d3\'da\'b1\'ed\'ca\'be\'d7\'ee\'bb\'b5\'c7\'e9\'bf\'f6\'a1\'a3\f4\par
\f1\u11088?\f2\'d2\'bb\'b0\'e3\'cc\'e1\'b7\'a8\'a3\'ba\'b4\'e6\'d4\'da\f3\lang1033 n0\f2\lang2052\'a3\'ac\'ca\'b9\'b5\'c3\f3\lang1033 T(n) <= cf(n)\f2\lang2052\'b6\'d4\'d3\'da\'cb\'f9\'d3\'d0\f3\lang1033 n>=n0\f2\lang2052\'b3\'c9\'c1\'a2\'a3\'ac\'c6\'e4\'d6\'d0\f3\lang1033 c\f2\lang2052\'ce\'aa\'c8\'ce\'d2\'e2\'b3\'a3\'ca\'fd\'a3\'ac\'d4\'f2\'b3\'c6\'cb\'e3\'b7\'a8\'ca\'b1\'bc\'e4\'d4\'f6\'b3\'a4\'c2\'ca\'d4\'da\f3\lang1033 O(f(n))\f2\lang2052\'d6\'d0\'a1\'a3\par
\f1\u11088?\f2\'ca\'fd\'c1\'bf\'bc\'b6\'b1\'c8\'bd\'cf\'a3\'ba\f3\lang1033 1 <log2n < n <nlog2n < n^2 < n^3 < 2^n < 3^n < n!\par
\f1\lang2052\u11088?\f2\'bc\'d3\'b7\'a8\'b9\'e6\'d4\'f2\'a3\'ba\'b6\'fe\'d5\'df\'c8\'a1\'b4\'f3\'d6\'b5\'a1\'a3\'bc\'b4\'b5\'b1\f3\lang1033 m\f2\lang2052\'d3\'eb\f3\lang1033 n\f2\lang2052\'b3\'e4\'b7\'d6\'b4\'f3\'ca\'b1\'c8\'a1\f3\lang1033 max\{f(n), g(m)\}\f2\lang2052\'a3\'ac\'d5\'fb\'b8\'f6\'b3\'cc\'d0\'f2\'b5\'c4\'ca\'b1\'bc\'e4\'b8\'b4\'d4\'d3\'b6\'c8\'ce\'aa\f3\lang1033 O( max\{f(n), g(m)\} )\f2\lang2052\'a1\'a3\par
\lang1033 -----------\lang2052\'a6\'b8\'bd\'a5\'bd\'f8\'b1\'ed\'ca\'be\lang1033 ------------\par
\f1\lang2052\u11088?\f2\'d3\'c3\'d3\'da\'b1\'ed\'ca\'be\'d7\'ee\'ba\'c3\'c7\'e9\'bf\'f6\'a1\'a3\f4\par
\f1\u11088?\f2\'d2\'bb\'b0\'e3\'cc\'e1\'b7\'a8\'a3\'ba\'b4\'e6\'d4\'da\f3\lang1033 n0\f2\lang2052\'a3\'ac\'ca\'b9\'b5\'c3\f3\lang1033 T(n) >=cg(n)\f2\lang2052\'b6\'d4\'d3\'da\'cb\'f9\'d3\'d0\f3\lang1033 n>=n0\f2\lang2052\'b3\'c9\'c1\'a2\'a3\'ac\'c6\'e4\'d6\'d0\f3\lang1033 c\f2\lang2052\'ce\'aa\'c8\'ce\'d2\'e2\'b3\'a3\'ca\'fd\'a3\'ac\'d4\'f2\'b3\'c6\'cb\'e3\'b7\'a8\'d7\'ee\'d0\'a1\'ca\'b1\'bc\'e4\'b4\'fa\'bc\'db\'ce\'aa\f3\lang1033 T(n)\f2\lang2052\'d4\'da\'a6\'b8\f3\lang1033 (g(n))\f2\lang2052\'d6\'d0\'a1\'a3\par
\par

\pard\b\fs32\'bd\'a5\'bd\'f8\'b5\'c4\'bf\'d5\'bc\'e4\'b8\'b4\'d4\'d3\'b6\'c8\'a3\'ba\b0\fs24\par

\pard\fi300\lang1033 -----------\lang2052\'b4\'f3\lang1033 O\lang2052\'bd\'a5\'bd\'f8\'b1\'ed\'ca\'be\lang1033 (S(n) = O(f(n)))------------\par
\f1\lang2052\u11088?\f2\'bf\'d5\'bc\'e4\'b8\'b4\'d4\'d3\'b6\'c8\'ca\'c7\'d6\'b8\'bd\'e2\'be\'f6\'ce\'ca\'cc\'e2\'cb\'f9\'d0\'e8\'b5\'c4\'b8\'a8\'d6\'fa\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\'a1\'a3\'b6\'f8\'b2\'bb\'ca\'c7\'b3\'cc\'d0\'f2\'d6\'b8\'c1\'ee\'a1\'a2\'b3\'a3\'ca\'fd\'a1\'a2\'d6\'b8\'d5\'eb\'a1\'a2\'ca\'e4\'c8\'eb\'ca\'fd\'be\'dd\'cb\'f9\'d5\'bc\'b5\'c4\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\'a1\'a3\par
\f1\u11088?\f2\'c0\'fd\'c8\'e7\'c5\'c5\'d0\'f2\'cb\'e3\'b7\'a8\'d6\'d0\'ce\'aa\'d2\'c6\'b6\'af\'ca\'fd\'be\'dd\'cb\'f9\'d0\'e8\'b5\'c4\'c1\'e3\'ca\'b1\'b9\'a4\'d7\'f7\'b5\'a5\'d4\'aa\'a1\'a2\'b5\'dd\'b9\'e9\'cb\'e3\'b7\'a8\'d6\'d0\'b5\'c4\'b5\'dd\'b9\'e9\'b9\'a4\'d7\'f7\'d5\'bb\'b5\'c8\'a1\'a3\par
\par

\pard\ul\b\f0\fs40\lang1033 ------C++\lang2052\'c8\'ba\'cc\'e5\'c0\'e0\'ba\'cd\'c8\'ba\'cc\'e5\'ca\'fd\'be\'dd\'d7\'e9\'d6\'af\lang1033 ------\lang2052\par

\pard\fi300\ulnone\b0\f1\fs24\u11088?\f2\'c8\'ba\'ca\'fd\'be\'dd\'a3\'ba\'b6\'e0\'b8\'f6\'bb\'f9\'b1\'be\'c0\'e0\'d0\'cd\'ba\'cd\'d7\'d4\'b6\'a8\'d2\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'aa\'cb\'d8\'d7\'e9\'b3\'c9\'b5\'c4\'d7\'d4\'b6\'a8\'d2\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'fd\'be\'dd\'a1\'a3\par
\f1\u11088?\f2\'c8\'ba\'cc\'e5\'c0\'e0\'a3\'ba\'b0\'d1\'c8\'ba\'cc\'e5\'ca\'fd\'be\'dd\'c9\'e8\'bc\'c6\'d2\'bb\'cf\'b5\'c1\'d0\'b2\'d9\'d7\'f7\'a3\'ac\'b0\'b4\'d5\'d5\'c3\'e6\'cf\'f2\'b6\'d4\'cf\'f3\'b5\'c4\'cb\'bc\'cf\'eb\'bd\'ab\'ca\'fd\'be\'dd\'ba\'cd\'b2\'d9\'d7\'f7\'b7\'e2\'d7\'b0\'b3\'c9\'c0\'e0\'a1\'a3\par
\par

\pard\qc\b\f0\fs64\'b5\'da\f2\'d2\'bb\f0\'bd\'da \'cf\'df\'d0\'d4\'b1\'ed\b0\f2\fs24\par

\pard\ul\b\f0\fs40\'b8\'c5\'c4\'ee\ulnone\b0\f2\fs24\par

\pard\fi300\f1\u11088?\f2\'cf\'df\'d0\'d4\'c8\'ba\'cc\'e5\'b0\'b4\'d5\'d5\'b7\'c3\'ce\'ca\'d4\'aa\'cb\'d8\'b5\'c4\'b2\'bb\'cd\'ac\'b7\'bd\'b7\'a8\'b7\'d6\'ce\'aa\'d6\'b1\'bd\'d3\'b7\'c3\'ce\'ca\'a1\'a2\'cb\'b3\'d0\'f2\'b7\'c3\'ce\'ca\'a1\'a2\'cb\'f7\'d2\'fd\'b7\'c3\'ce\'ca\'a1\'a3\'c1\'ed\'cd\'e2\'a3\'ac\'bb\'b9\'d3\'d0\'c1\'bd\'d6\'d6\'cc\'d8\'ca\'e2\'b5\'c4\'cf\'df\'d0\'d4\'c8\'ba\'cc\'e5\'a3\'ba\'d5\'bb\'ba\'cd\'b6\'d3\'c1\'d0\'a1\'a3\par

\pard\ul\b\f0\fs40\'cb\'b3\'d0\'f2\'b1\'ed\'a3\'a8\'cf\'df\'d0\'d4\'b1\'ed\'bb\'f9\'d3\'da\'ca\'fd\'d7\'e9\'b5\'c4\'b4\'e6\'b4\'a2\'b1\'ed\'ca\'be\'a3\'a9\par
\ulnone\f2\fs32\'be\'b2\'cc\'ac\'ca\'fd\'d7\'e9\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'be\'b2\'cc\'ac\'ca\'fd\'d7\'e9\'ca\'c7\'d3\'d0\'b9\'cc\'b6\'a8\'d4\'aa\'cb\'d8\'b8\'f6\'ca\'fd\'b5\'c4\'c8\'ba\'cc\'e5\'a3\'ac\'d4\'aa\'cb\'d8\'bf\'c9\'cd\'a8\'b9\'fd\'cf\'c2\'b1\'ea\'d6\'b1\'bd\'d3\'b7\'c3\'ce\'ca\'a1\'a3\'c8\'b1\'b5\'e3\'ca\'c7\'ce\'de\'b7\'a8\'d0\'de\'b8\'c4\'b4\'f3\'d0\'a1\'a1\'a2\'b2\'bb\'c4\'dc\'d3\'d0\'d0\'a7\'b1\'dc\'c3\'e2\'cf\'c2\'b1\'ea\'d4\'bd\'bd\'e7\'ce\'ca\'cc\'e2\'a1\'a3\par

\pard\b\fs32\'b6\'af\'cc\'ac\'ca\'fd\'d7\'e9\f3\lang1033 (\f2\lang2052\'cb\'b3\'d0\'f2\'b1\'ed\f3\lang1033 )\f2\lang2052\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'c0\'fd\'c8\'e7\f3\lang1033 vector\f2\lang2052\'be\'cd\'ca\'c7\'d2\'bb\'b8\'f6\'b6\'af\'cc\'ac\'ca\'fd\'d7\'e9\'c0\'e0\'c4\'a3\'b0\'e5\'a1\'a3\par
\f1\u11088?\f2\'d7\'d4\'b6\'a8\'d2\'e5\'b6\'af\'cc\'ac\'ca\'fd\'d7\'e9\'c0\'e0\'ca\'b5\'cf\'d6\'a3\'ba\par
\lang1033\tab\f3 template<class T>\par
\f2\tab\f3 class SeqList\par
\f2\tab\f3\{\par
\f2\tab\f3 private:\par
\f2\tab\tab\f3 T * list;\f2\tab\tab\tab\tab\tab\tab\tab\f3 //T\f2\lang2052\'c0\'e0\'d0\'cd\'d6\'b8\'d5\'eb\'a1\'a3\'b4\'e6\'b7\'c5\'b6\'af\'cc\'ac\'b7\'d6\'c5\'e4\'b5\'c4\'ca\'fd\'d7\'e9\'c4\'da\'b4\'e6\'ca\'d7\'b5\'d8\'d6\'b7\f3\lang1033\par
\f2\tab\tab\f3 int maxSize;\f2\tab\tab\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'ca\'fd\'d7\'e9\'b4\'f3\'d0\'a1\par
\lang1033\tab\tab\f3 int last;\f2\tab\tab\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'d2\'d1\'b4\'e6\'b1\'ed\'cf\'ee\'b5\'c4\'d7\'ee\'ba\'f3\'ce\'bb\'d6\'c3\par
\lang1033\tab\tab\f3 void reSize(int size);\f2\tab\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'d0\'de\'b8\'c4\f3\lang1033 list\f2\lang2052\'ca\'fd\'d7\'e9\'bf\'d5\'bc\'e4\'b4\'f3\'d0\'a1\f3\lang1033\par
\f2\tab\f3 public:\par
\f2\tab\tab\f3 SeqList(int size = 0);\par
\f2\tab\tab\f3 SeqList(const SeqList<T> &a);\par
\f2\tab\tab\f3 ~SeqList();\par
\par
\f2\tab\tab\f3 T & operator [] (int i);\f2\tab\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'d6\'d8\'d4\'d8\f3\lang1033 "[]"\f2\lang2052\'a3\'ac\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'cb\'f7\'d2\'fd\'a3\'a8\'ca\'b9\f3\lang1033 Array\f2\lang2052\'b6\'d4\'cf\'f3\'c6\'f0\'b5\'bd\f3\lang1033 C++\f2\lang2052\'c6\'d5\'cd\'a8\'ca\'fd\'d7\'e9\'b5\'c4\'d7\'f7\'d3\'c3\'a3\'a9\f3\lang1033\par
\f2\tab\tab\f3 const T & operator [] (int i) const;\f2\tab\tab\tab\tab\f3 //"[]"\f2\lang2052\'d4\'cb\'cb\'e3\'b7\'fb\'d5\'eb\'b6\'d4\f3\lang1033 const\f2\lang2052\'b5\'c4\'d6\'d8\'d4\'d8\f3\lang1033\par
\f2\tab\tab\f3 operator T * ();\f2\tab\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'d6\'d8\'d4\'d8\'b5\'bd\f3\lang1033 T*\f2\lang2052\'c0\'e0\'d0\'cd\'b5\'c4\'d7\'aa\'bb\'bb\'a3\'a8\'ca\'b9\f3\lang1033 Array\f2\lang2052\'b6\'d4\'cf\'f3\'c6\'f0\'b5\'bd\f3\lang1033 C++\f2\lang2052\'c6\'d5\'cd\'a8\'ca\'fd\'d7\'e9\'b5\'c4\'d7\'f7\'d3\'c3\'a3\'a9\f3\lang1033\par
\f2\tab\tab\f3 operator const T * () const;\f2\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'b5\'bd\f3\lang1033 T*\f2\lang2052\'c0\'e0\'d0\'cd\'d7\'aa\'bb\'bb\'d5\'eb\'b6\'d4\f3\lang1033 const\f2\lang2052\'b5\'c4\'d6\'d8\'d4\'d8\f3\lang1033\par
\f2\tab\tab\f3 int Size() const;\f2\tab\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'bb\'f1\'c8\'a1\'b1\'ed\'d7\'ee\'b4\'f3\'c8\'dd\'c4\'c9\'b1\'ed\'cf\'ee\f3\lang1033\par
\f2\tab\tab\f3 int Length() const;\f2\tab\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'bb\'f1\'c8\'a1\'b1\'ed\'b3\'a4\'b6\'c8\par
\par
\lang1033\tab\tab\f3 //\f2\lang2052\'c6\'e4\'cb\'fb\'b9\'a6\'c4\'dc\'ca\'b5\'cf\'d6\par
\lang1033\tab\tab\f3 bool\f2\lang2052  \f3\lang1033 Insert(int i, T & x);\f2\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'b2\'e5\'c8\'eb\'c4\'b3\'d2\'bb\'cf\'ee\'a3\'a8\'ca\'b5\'cf\'d6\'a3\'ba\'c4\'b3\'ce\'bb\'d6\'c3\'ba\'f3\'c3\'e6\'d2\'c0\'b4\'ce\'ba\'f3\'d2\'c6\'a3\'ac\'c8\'bb\'ba\'f3\'b2\'e5\'c8\'eb\'a3\'a9\f3\lang1033\par
\f2\tab\tab\f3 bool Remove(int i, t & x);\f2\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'c9\'be\'b3\'fd\'c4\'b3\'d2\'bb\'cf\'ee\'a3\'a8\'ca\'b5\'cf\'d6\'a3\'ba\'c9\'be\'b3\'fd\'c4\'b3\'d2\'bb\'cf\'ee\'a3\'ac\'ba\'f3\'c3\'e6\'d2\'c0\'b4\'ce\'c7\'b0\'d2\'c6\'a3\'a9\par
\lang1033\tab\tab\f3 int\f2\lang2052  \f3\lang1033 Search(T & x) const;\f2\tab\tab\tab\tab\tab\f3 //\f2\lang2052\'cb\'d1\'cb\'f7\f3\lang1033 x\f2\lang2052\'d4\'da\'b1\'ed\'d6\'d0\'ce\'bb\'d6\'c3\'a3\'ac\'b7\'b5\'bb\'d8\'d0\'f2\'ba\'c5\par
\lang1033\tab\tab\f3 SeqList<T> & operator=(const SeqList<T> &rhs);\f2\tab\tab\tab\f3 //\f2\lang2052\'d6\'d8\'d4\'d8\'b8\'b3\'d6\'b5\'d4\'cb\'cb\'e3\'b7\'fb\'a3\'ac\'ca\'b9\'ca\'fd\'d7\'e9\'b6\'d4\'cf\'f3\'bf\'c9\'d2\'d4\'d5\'fb\'cc\'e5\'b8\'b3\'d6\'b5\f3\lang1033\par
\f2\tab\f3\};\par
\par

\pard\ul\b\f0\fs40\lang2052\'b5\'a5\'c1\'b4\'b1\'ed\ulnone\b0\f2\fs24\par
\b\fs32\'b6\'a8\'d2\'e5\'bd\'da\'b5\'e3\'c0\'e0\'a3\'a8\'bf\'c9\'d2\'d4\'d3\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\lang1033\tab\tab\f3 template<class\f2\lang2052  \f3\lang1033 T> struct Node\par
\f2\tab\tab\f3\{\f2\lang2052\par
\lang1033\tab\tab\tab\f3 Node<T> * next;\par
\f2\tab\tab\tab\f3 T data;\par
\f2\tab\tab\f3\}\f2\lang2052\par

\pard\b\fs32\'b6\'a8\'d2\'e5\'c1\'b4\'b1\'ed\'c0\'e0\'a3\'ba\par

\pard\fi300\b0\fs24\lang1033\tab\tab\f3 template<class T> class LinkedList\par
\f2\tab\tab\f3\{\par
\f2\tab\tab\f3 private:\par
\f2\tab\tab\tab\f3 Node<T> * first\par
\f2\tab\tab\tab\f3 ......\par
\f2\tab\tab\f3 public:\par
\f2\tab\tab\tab\f3 LinkedList();\par
\f2\tab\tab\tab\f3 LinkedList(const LinkedList<T> &l);\par
\f2\tab\tab\tab\f3 ~LinkedList();\par
\f2\tab\tab\tab\f3 ......\par
\f2\tab\tab\tab\f3 void AddFront(T & x);\f2\tab\tab\tab\f3 //\f2\lang2052\'c7\'b0\'b2\'e5\par
\lang1033\tab\tab\tab\f3 Node<T> * Locate(int i);\f2\tab\tab\f3 //\f2\lang2052\'b6\'a8\'ce\'bb\f3\lang1033\par
\f2\tab\tab\tab\f3 bool Insert(int i, t& x);\f2\tab\tab\tab\f3 //\f2\lang2052\'b2\'e5\'c8\'eb\f3\lang1033\par
\f2\tab\tab\tab\f3 bool Remove(int i);\f2\tab\tab\tab\f3 //\f2\lang2052\'c9\'be\'b3\'fd\f3\lang1033\par
\f2\tab\tab\tab\f3 ......\par
\f2\tab\tab\f3\}\par

\pard\ul\b\f0\fs40\lang2052\'be\'b2\'cc\'ac\'c1\'b4\'b1\'ed\ulnone\b0\f2\fs24\par

\pard\fi300 template<class T> struct Node\par
\{\par
\tab T data;\par
\tab int nextIndex;\par
\par
\tab Node() \{\};\par
\tab Node(const T & item, int i) \{ data = item; nextIndex = i; \};\par
\};\par
\par
template<class T> class StaticList\par
\{\par
private:\par
\tab Node<T> * eles;\tab //\'ca\'fd\'d7\'e9\par
\tab int maxSize;\par
\tab int avil;\tab\tab\f3\lang1033 //\f2\lang2052\'bf\'c9\'b7\'d6\'c5\'e4\'bf\'d5\'bc\'e4\'b5\'c4\'ca\'d7\'b5\'d8\'d6\'b7\'a3\'a8\'bc\'b4\'b1\'b8\'d3\'c3\'c1\'b4\'b1\'ed\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'bd\'da\'b5\'e3\'a3\'a9\par
public:\par
\tab StaticList();\par
\tab ~StaticList();\par
\tab int Length();\par
\tab\f3\lang1033 ......\f2\lang2052\par
\};\par

\pard\qc\b\f0\fs64\'b5\'da\'b6\'fe\'bd\'da \'d5\'bb\'ba\'cd\'b6\'d3\'c1\'d0\ul\fs40\par

\pard\'cb\'b3\'d0\'f2\'d5\'bb\ulnone\b0\f2\fs24\par

\pard\fi300 template<class T> class SeqStack : public Stack<T>\par
\{\par
private:\par
\tab T * eles;\par
\tab int top;\par
\tab int maxSize;\par
\tab void OverflowProcess();\par
\par
public:\par
\tab SeqStack(int size = 0);\par
\tab ~SeqStack() \{ delete[] eles; \}\par
\tab void Push(const T & item);\par
\tab bool Pop(T & item);\par
\tab bool GetTop(T & item) const;\par
\tab bool IsEmpty() const \{ return (top == -1) ? true : false; \};\par
\tab bool IsFull() const \{ return (top == maxSize - 1) ? true : false; \};\par
\tab int GetSize() const \{ return top + 1; \};\par
\tab\f3\lang1033 ... ...\f2\lang2052\par
\};\par
\par

\pard\ul\b\f0\fs40\'c1\'b4\'ca\'bd\'d5\'bb\ulnone\b0\f2\fs24\par

\pard\fi300 template<class T>\par
struct Node\par
\{\par
\tab T data;\par
\tab Node<T> * link;\par
\tab Node(const T & newData, Node<T> * newLink) \{ data = newData; link = newLink; \}\par
\};\par
\par
template<class T> class LinkStack : public Stack<T>\par
\{\par
private:\par
\tab Node<T> * top;\par
public:\par
\tab LinkStack() : top(NULL) \{\};\par
\tab void Push(const T & item);\par
\tab bool Pop(T & item);\par
\tab bool GetTop(T & item) const;\par
\tab bool IsEmpty() const \{ return (top == NULL); \}\par
\tab bool IsFull() const \{ return false; \}\par
\tab int GetSize() const;\par
\tab\f3\lang1033 ... ...\f2\lang2052\par
\};\par
\par

\pard\ul\b\f0\fs40\'d5\'bb\'b5\'c4\'d3\'a6\'d3\'c3\ulnone\b0\f2\fs24\par
\b\fs32\'c0\'a8\'ba\'c5\'c6\'a5\'c5\'e4\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'c9\'a8\'c3\'e8\'d7\'d6\'b7\'fb\'b4\'ae\'c5\'d0\'b6\'cf\'c0\'a8\'ba\'c5\'b5\'c4\'c6\'a5\'c5\'e4\'c7\'e9\'bf\'f6\'a1\'a3\par

\pard\b\fs32\'b1\'ed\'b4\'ef\'ca\'bd\'bc\'c6\'cb\'e3\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'ba\'f3\'d7\'ba\'b1\'ed\'b4\'ef\'ca\'bd\'b5\'c4\'bc\'c6\'cb\'e3\'a3\'ba\'c9\'a8\'c3\'e8\'b5\'bd\'b2\'d9\'d7\'f7\'b7\'fb\'a3\'ac\'d4\'f2\'b3\'f6\'d5\'bb\'c1\'bd\'b8\'f6\'b2\'d9\'d7\'f7\'ca\'fd\'bc\'c6\'cb\'e3\'a3\'ac\'bd\'e1\'b9\'fb\'d4\'d9\'bd\'f8\'d5\'bb\'a1\'a3\par
\f1\u11088?\f2\'d6\'d0\'d7\'ba\'b1\'ed\'b4\'ef\'ca\'bd\'d7\'aa\'ba\'f3\'d7\'ba\'b1\'ed\'b4\'ef\'ca\'bd\'a3\'ba\'c9\'a8\'c3\'e8\'b5\'bd\'b2\'d9\'d7\'f7\'ca\'fd\'d6\'b1\'bd\'d3\'ca\'e4\'b3\'f6\'a3\'ac\'c9\'a8\'c3\'e8\'b5\'bd\'b2\'d9\'d7\'f7\'b7\'fb\'d4\'f2\'b1\'c8\'bd\'cf\f3\lang1033 icp(ch)\f2\lang2052\'ba\'cd\f3\lang1033 isp(op)\f2\lang2052\'b5\'c4\'b4\'f3\'d0\'a1\'c0\'b4\'bd\'f8\'d0\'d0\'b2\'bb\'cd\'ac\'b2\'d9\'d7\'f7\'a1\'a3\'a3\'a8\'d5\'bb\'b3\'f5\'ca\'bc\'bb\'af\'ba\'f3\'c8\'c3\'d2\'bb\'b8\'f6\f3\lang1033 #\f2\lang2052\'b7\'fb\'ba\'c5\'cf\'c8\'bd\'f8\'d5\'bb\'a3\'ac\'d7\'d6\'b7\'fb\'b4\'ae\'d2\'b2\'d2\'d4\f3\lang1033 #\f2\lang2052\'b7\'fb\'ba\'c5\'bd\'e1\'ca\'f8\'a3\'ac\'d7\'ee\'ba\'f3\'b5\'b1\'d5\'bb\'b6\'a5\'ba\'cd\'b5\'b1\'c7\'b0\'d7\'d6\'b7\'fb\'b6\'bc\'ca\'c7\f3\lang1033 #\f2\lang2052\'b7\'fb\'ba\'c5\'ca\'b1\'bd\'e1\'ca\'f8\'a1\'a3\'a3\'a9\par

\pard\b\fs32\'b5\'dd\'b9\'e9\'b5\'c4\'b8\'c5\'c4\'ee\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'b5\'dd\'b9\'e9\'b6\'a8\'d2\'e5\'a3\'ba\'c8\'e7\'ec\'b3\'b2\'a8\'c4\'c7\'c6\'f5\'ca\'fd\'c1\'d0\'b5\'c8\'a1\'a3\par
\f1\u11088?\f2\'b5\'dd\'b9\'e9\'b5\'c4\'ca\'fd\'be\'dd\'bd\'e1\'b9\'b9\'a3\'ba\'c8\'e7\'c1\'b4\'b1\'ed\'b5\'c8\'a1\'a3\par
\f1\u11088?\f2\'b5\'dd\'b9\'e9\'b5\'c4\'ce\'ca\'cc\'e2\'a3\'ba\'c8\'e7\'ba\'ba\'c5\'b5\'cb\'fe\'ce\'ca\'cc\'e2\'b5\'c8\'a1\'a3\'a3\'a8\'b0\'d1\'b9\'e6\'c4\'a3\'ce\'aa\f3\lang1033 n\f2\lang2052\'b5\'c4\'ce\'ca\'cc\'e2\'b1\'e4\'b3\'c9\'b9\'e6\'c4\'a3\f3\lang1033 n-1\f2\lang2052\'b5\'c4\'ce\'ca\'cc\'e2\'a1\'a3\'a3\'a9\par

\pard\b\fs32\'b5\'dd\'b9\'e9\'b9\'a4\'d7\'f7\'d5\'bb\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'c3\'bf\'b2\'e3\'b5\'dd\'b9\'e9\'b5\'f7\'d3\'c3\'cb\'f9\'d0\'e8\'b1\'a3\'b3\'d6\'b5\'c4\'d0\'c5\'cf\'a2\'b9\'b9\'b3\'c9\'d2\'bb\'b8\'f6\'b9\'a4\'d7\'f7\'bc\'c7\'c2\'bc\'a1\'a3\'d4\'da\'c3\'bf\'bd\'f8\'c8\'eb\'d2\'bb\'b2\'e3\'b5\'dd\'b9\'e9\'ca\'b1\'a3\'ac\'cf\'b5\'cd\'b3\'b6\'bc\'d2\'aa\'bd\'a8\'c1\'a2\'d2\'bb\'b8\'f6\'b9\'a4\'d7\'f7\'bc\'c7\'c2\'bc\'a3\'ac\'bc\'d3\'b5\'bd\'b5\'dd\'b9\'e9\'b9\'a4\'d7\'f7\'d5\'bb\'a1\'a3\par
\f1\u11088?\f2\'b9\'a4\'d7\'f7\'bc\'c7\'c2\'bc\'b0\'fc\'c0\'a8\'a3\'ba\f3\lang1033 1\f2\lang2052\'a1\'a2\'b7\'b5\'bb\'d8\'ce\'bb\'d6\'c3\'a3\'a8\'b5\'dd\'b9\'e9\'b5\'f7\'d3\'c3\'b5\'c4\'cf\'c2\'d2\'bb\'cc\'f5\'d6\'b8\'c1\'ee\'a3\'a9\'a1\'a3\f3\lang1033 2\f2\lang2052\'a1\'a2\'be\'d6\'b2\'bf\'b1\'e4\'c1\'bf\'a1\'a3\f3\lang1033 3\f2\lang2052\'a1\'a2\'b2\'ce\'ca\'fd\'b5\'c4\'b8\'b1\'b1\'be\'bf\'d5\'bc\'e4\'a3\'a8\'b0\'fc\'c0\'a8\'b4\'ab\'d6\'b5\'d0\'cd\'b2\'ce\'ca\'fd\f3\lang1033 /\f2\lang2052\'b7\'b5\'bb\'d8\'d6\'b5\'ba\'cd\'d2\'fd\'d3\'c3\'d0\'cd\'b2\'ce\'ca\'fd\f3\lang1033 /\f2\lang2052\'b7\'b5\'bb\'d8\'d6\'b5\'a3\'a9\'a1\'a3\par

\pard\b\fs32\'d3\'c3\'d5\'bb\'ca\'b5\'cf\'d6\'b5\'dd\'b9\'e9\'b9\'fd\'b3\'cc\'b5\'c4\'b7\'c7\'b5\'dd\'b9\'e9\'cb\'e3\'b7\'a8\'a3\'a8\'ec\'b3\'b2\'a8\'c4\'c7\'c6\'f5\'ce\'aa\'c0\'fd\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300 struct FibNode\par
\{\par
\tab int n;//\'bc\'c7\'c2\'bc\'bd\'da\'b5\'e3\'d6\'b5\par
\tab int tag;//\'bc\'c7\'c2\'bc\'bd\'da\'b5\'e3\'d7\'d3\'ca\'f7\'b7\'d6\'d6\'a7\'c2\'b7\'be\'b6\par
\};\par
int Fibnacci(int n)//\'d4\'ad\'c0\'ed\'a3\'ba\'b1\'e9\'c0\'fa\'d2\'b6\'d7\'d3\'bd\'da\'b5\'e3\'cf\'e0\'bc\'d3\par
\{\par
\tab SeqStack<FibNode> stack;\par
\tab FibNode w;\par
\tab int sum = 0;\par
\tab do\par
\tab\{\par
\tab\tab while (n > 1) //\'d7\'f3\'b7\'d6\'d6\'a7\'c8\'eb\'d5\'bb\par
\tab\tab\{ \par
\tab\tab\tab w.n = n; w.tag = 1; stack.Push(w);\par
\tab\tab\tab n = w.n - 1;\par
\tab\tab\}\par
\tab\tab sum += n; //\'c7\'f3\'ba\'cd\'d2\'b6\'d7\'d3\'bd\'da\'b5\'e3\'d6\'b5\par
\tab\tab while (stack.IsEmpty() == false) //\'c7\'d0\'bb\'bb\'d7\'d3\'ca\'f7\par
\tab\tab\{\par
\tab\tab\tab stack.Pop(w);\par
\tab\tab\tab if (w.tag == 1) \par
\tab\tab\tab\{ \par
\tab\tab\tab\tab w.tag = 2; stack.Push(w); \par
\tab\tab\tab\tab n = w.n - 2; \par
\tab\tab\tab\tab break; \par
\tab\tab\tab\}\par
\tab\tab\}\par
\par
\tab\}while (stack.IsEmpty() == false);\par
\tab return sum;\par
\}\par
\par

\pard\b\fs32\'d3\'c3\'b5\'fc\'b4\'fa\'ca\'b5\'cf\'d6\'b5\'dd\'b9\'e9\'b9\'fd\'b3\'cc\'b5\'c4\'b7\'c7\'b5\'dd\'b9\'e9\'cb\'e3\'b7\'a8\'a3\'a8\'ec\'b3\'b2\'a8\'c4\'c7\'c6\'f5\'ce\'aa\'c0\'fd\'a3\'a9\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'b4\'d3\'b5\'d7\'b2\'e3\'b5\'f7\'d3\'c3\'bf\'aa\'ca\'bc\'b5\'fc\'b4\'fa\'a1\'a3\par
\f1\u11088?\f2\'b8\'fc\'bc\'d3\'bf\'ec\'cb\'d9\'bc\'f2\'b5\'a5\'a1\'a3\par
int Fibnacci2(int n)\par
\{\par
\tab if (n <= 1) return n;\par
\par
\tab int twoback = 0; int oneback = 1; int current;\par
\tab for (int i = 2; i <= n; i++)\par
\tab\{\par
\tab\tab current = twoback + oneback;\par
\tab\tab twoback = oneback;\par
\tab\tab oneback = current;\par
\tab\}\par
\tab return current;\par
\}\par
\par
\par

\pard\ul\b\f0\fs40\'cb\'b3\'d0\'f2\'b6\'d3\'c1\'d0\par

\pard\fi300\ulnone\b0\f2\fs24 template<class T> class SeqQueue\par
\{\par
private:\par
\tab T * eles;\par
\tab int front;\par
\tab int rear;\par
\tab int maxSize;\par
public:\par
\tab SeqQueue(int sz = 0);\par
\par
\tab bool IsEmpty() \{ return front == rear; \}\par
\tab bool IsFull() \{ return ((rear + 1) % maxSize) == front; \}\par
\par
\tab bool EnQueue(T & item);\par
\tab bool DeQueue(T & item);\par
\par
\};\par
\par

\pard\ul\b\f0\fs40\'c1\'b4\'ca\'bd\'b6\'d3\'c1\'d0\ulnone\b0\f2\fs24\par

\pard\fi300 template<class T>\par
struct Node\par
\{\par
\tab T data;\par
\tab Node<T> * next;\par
\tab Node(T & item, Node<T> * link) \{ data = item; next = link; \}\par
\};\par
\par
\par
\par
template<class T> class LinkQueue\par
\{\par
private:\par
\tab Node<T> * front, * rear;\par
public:\par
\tab LinkQueue() : front(NULL), rear(NULL) \{\};\par
\par
\tab bool EnQueue(T & item);\par
\tab bool DeQueue(T & item);\par
\tab bool IsEmpty() \{ return front == NULL; \}\par
\};\par
\par

\pard\ul\b\f0\fs40\'b6\'d3\'c1\'d0\'b5\'c4\'d3\'a6\'d3\'c3\ulnone\b0\f2\fs24\par
\b\fs32\'b6\'fe\'cf\'ee\'ca\'bd\'d5\'b9\'bf\'aa\'cf\'b5\'ca\'fd\'a3\'a8\'d1\'ee\'bb\'d4\'c8\'fd\'bd\'c7\'a3\'a9\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'d4\'da\'b4\'f2\'d3\'a1\'b5\'da\lang1033 i\lang2052\'d0\'d0\'ca\'b1\'a3\'ac\'bb\'e1\'d3\'c3\'b5\'bd\lang1033 i-1\lang2052\'d0\'d0\'b5\'c4\'ca\'fd\'d7\'d6\'a3\'ac\'cb\'f9\'d2\'d4\'bf\'c9\'d2\'d4\'d3\'c3\'b6\'d3\'c1\'d0\'c0\'b4\'bd\'e2\'be\'f6\'a1\'a3\'c3\'bf\'d0\'d0\'ca\'fd\'d7\'d6\'d4\'aa\'cb\'d8\'d6\'ae\'bc\'e4\'d3\'c3\'d4\'aa\'cb\'d8\lang1033 "0"\lang2052\'b8\'f4\'bf\'aa\'a1\'a3\par
\par
\par

\pard\qc\b\f0\fs64\'b5\'da\'c8\'fd\'bd\'da \'b4\'ae\b0\f2\fs24\par

\pard\ul\b\f0\fs40\'b4\'ae\'b5\'c4\'b8\'c5\'c4\'ee\ulnone\b0\f2\fs24\par

\pard\fi300\'b4\'ae\'ca\'c7\'d2\'bb\'d6\'d6\'cc\'d8\'ca\'e2\'b5\'c4\'cf\'df\'d0\'d4\'b1\'ed\'a1\'a3\par

\pard\ul\b\f0\fs40\'b4\'ae\'b5\'c4\'c8\'fd\'d6\'d6\'b4\'e6\'b4\'a2\'b1\'ed\'ca\'be\ulnone\b0\f2\fs24\par
\b\fs32\'b6\'a8\'b3\'a4\'cb\'b3\'d0\'f2\'b4\'e6\'b4\'a2\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'bd\'ab\'b4\'ae\'b6\'a8\'d2\'e5\'b3\'c9\'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9\'a3\'ac\'bf\'c9\'d2\'d4\'d3\'c3\'b4\'ae\'c3\'fb\'d6\'b1\'bd\'d3\'b7\'c3\'ce\'ca\'b4\'ae\'d6\'b5\'a1\'a3\'b5\'ab\'ca\'c7\'b4\'ae\'b5\'c4\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\'b4\'f3\'d0\'a1\'b2\'bb\'c4\'dc\'b8\'c4\'b1\'e4\'a1\'a3\par
struct SeqString\par
\{\par
\tab char c[maxSize];\par
\tab int curLength;\par
\};\par
\par

\pard\b\f1\fs32\u10004?\f2\'b6\'d1\'b7\'d6\'c5\'e4\'b4\'e6\'b4\'a2\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'cf\'b5\'cd\'b3\'b7\'d6\'c5\'e4\'d2\'bb\'b8\'f6\'bf\'d5\'bc\'e4\'d7\'e3\'b9\'bb\'b4\'f3\'b2\'a2\'c7\'d2\'b5\'d8\'d6\'b7\'c1\'ac\'d0\'f8\'b5\'c4\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\'a3\'a8\'b3\'c6\'ce\'aa\'b6\'d1\'a3\'a9\'b9\'a9\'b4\'ae\'ca\'b9\'d3\'c3\'a1\'a3\par
\f1\u11088?\f2\'c8\'d4\'c8\'bb\'ca\'c7\'d2\'bb\'d7\'e9\'b5\'d8\'d6\'b7\'c1\'ac\'d0\'f8\'b5\'c4\'b4\'e6\'b4\'a2\'bf\'d5\'bc\'e4\'c0\'b4\'b4\'e6\'b4\'a2\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b5\'ab\'ca\'c7\'c6\'e4\'bf\'d5\'bc\'e4\'ca\'c7\'b6\'af\'cc\'ac\'b7\'d6\'c5\'e4\'b5\'c4\'a3\'ac\'bf\'c9\'b1\'e4\'b3\'a4\'b5\'c4\'a1\'a3\par
struct SeqString2\par
\{\par
\tab char * c;\par
\tab int curLength;\par
\};\par
\par

\pard\b\fs32\'bf\'e9\'c1\'b4\'b4\'e6\'b4\'a2\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'b5\'a5\'c1\'b4\'b1\'ed\'c0\'b4\'b4\'e6\'b4\'a2\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'c3\'bf\'b8\'f6\'bd\'da\'b5\'e3\'bf\'c9\'d2\'d4\'b4\'e6\'b4\'a2\'bc\'b8\'b8\'f6\'d7\'d6\'b7\'fb\'a1\'a3\par
\f1\u11088?\f2\'c2\'d4\'a1\'a3\par
\par

\pard\ul\b\f0\fs40\'d7\'d4\'b6\'a8\'d2\'e5\'d7\'d6\'b7\'fb\'b4\'ae\'c0\'e0\ulnone\b0\f2\fs24\par

\pard\fi300 class MyString\par
\{\par
private:\par
\tab char * ch;\par
\tab int curLength;\par
\tab int maxSize;\par
public:\par
\tab MyString();\par
\tab MyString(const MyString & str);\par
\tab ~MyString();\par
\tab MyString & operator()(int pos, int len);\par
\tab bool operator==(MyString & str) const;\par
\tab bool operator!=(MyString & str) const;\par
\tab bool operator!() const;\par
\tab MyString & operator=(MyString & str);\par
\tab MyString & operator+=(MyString & str);\par
\tab //......\par
\};\par
\par

\pard\ul\b\f0\fs40\'c4\'a3\'ca\'bd\'c6\'a5\'c5\'e4\ulnone\b0\f2\fs24\par
\b\fs32\'b6\'a8\'d2\'e5\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'d4\'da\'d7\'d6\'b7\'fb\'b4\'ae\lang1033 T\lang2052\'d6\'d0\'b2\'e9\'d5\'d2\'ca\'c7\'b7\'f1\'d3\'d0\'d3\'eb\'b4\'ae\lang1033 pat\lang2052\'cf\'e0\'b5\'c8\'b5\'c4\'d7\'d3\'b4\'ae\'a1\'a3\'d4\'f2\'b3\'c6\lang1033 T\lang2052\'ce\'aa\'c4\'bf\'b1\'ea\'a3\'a8\lang1033 Target\lang2052\'a3\'a9\'a1\'a2\lang1033 pat\lang2052\'ce\'aa\'c4\'a3\'ca\'bd\'a3\'a8\lang1033 Pattern\lang2052\'a3\'a9\'a1\'a3\'b2\'a2\'b3\'c6\'b2\'e9\'d5\'d2\'c4\'a3\'ca\'bd\'b4\'ae\'d4\'da\'c4\'bf\'b1\'ea\'b4\'ae\'d6\'d0\'b5\'c4\'c6\'a5\'c5\'e4\'ce\'bb\'d6\'c3\'b5\'c4\'d4\'cb\'cb\'e3\'b3\'c6\'ce\'aa\'c4\'a3\'ca\'bd\'c6\'a5\'c5\'e4\'a1\'a3\par

\pard\b\fs32\'bc\'f2\'b5\'a5\'c4\'a3\'ca\'bd\'c6\'a5\'c5\'e4\'cb\'e3\'b7\'a8\'a3\'a8\'bb\'d8\'cb\'dd\'cb\'e3\'b7\'a8\'a3\'a9\'a3\'ba\b0\fs24\par

\pard\fi300\f1\u11088?\f2\'d6\'f0\'cc\'cb\'b1\'c8\'bd\'cf\'a1\'a3\'d2\'bb\'b5\'a9\'b1\'c8\'bd\'cf\'b2\'bb\'b5\'c8\'a3\'ac\'be\'cd\'bd\'ab\'c4\'a3\'ca\'bd\f3\lang1033 pat\f2\lang2052\'d3\'d2\'d2\'c6\'d2\'bb\'ce\'bb\'a3\'ac\'d4\'d9\'b4\'d3\f3\lang1033 p0\f2\lang2052\'bf\'aa\'ca\'bc\'b1\'c8\'bd\'cf\'a1\'a3\par

\pard\b\fs32\'b8\'c4\'bd\'f8\'cb\'e3\'b7\'a8\'a3\'a8\lang1033 KMP\lang2052\'cb\'e3\'b7\'a8\'a3\'a9\'a3\'ba\par

\pard\fi300\b0\f1\fs24\u11088?\f2\'c3\'bf\'b5\'b1\'d2\'bb\'cc\'cb\'c6\'a5\'c5\'e4\'b9\'fd\'b3\'cc\'b3\'f6\'cf\'d6\'d7\'d6\'b7\'fb\'b2\'bb\'cf\'e0\'b5\'c8\'ca\'b1\'a3\'ac\'d6\'f7\'b4\'ae\'d6\'b8\'ca\'be\'c6\'f7\'b2\'bb\'d3\'c3\'bb\'d8\'cb\'dd\'a3\'ac\'b6\'f8\'ca\'c7\'c0\'fb\'d3\'c3\'d2\'d1\'be\'ad\'b5\'c3\'b5\'bd\'b5\'c4\'b2\'bf\'b7\'d6\'c6\'a5\'c5\'e4\'bd\'e1\'b9\'fb\'a3\'ac\'bd\'ab\'c4\'a3\'ca\'bd\'b4\'ae\'b5\'c4\'d6\'b8\'ca\'be\'c6\'f7\'cf\'f2\'d3\'d2\'d2\'c6\'b6\'af\'be\'a1\'bf\'c9\'c4\'dc\lang1033 3\lang2052\'d4\'b6\'ba\'f3\'bc\'cc\'d0\'f8\'bd\'f8\'d0\'d0\'c6\'a5\'c5\'e4\'a1\'a3\par
\f1\u11088?\f2\'d2\'bb\'b0\'e3\'b5\'d8\'a3\'ac\'c8\'f4\'c9\'e8\'d4\'da\'bd\'f8\'d0\'d0\'c4\'b3\'d2\'bb\'cc\'cb\'c6\'a5\'c5\'e4\'b1\'c8\'bd\'cf\'ca\'b1\'d4\'da\'c4\'a3\'ca\'bd\lang1033 P\lang2052\'b5\'c4\'b5\'da\lang1033 j\lang2052\'ce\'bb\'ca\'a7\'c5\'e4\'a3\'ac\'c8\'e7\'b9\'fb\lang1033 j>0\lang2052\'a3\'ac\'c4\'c7\'c3\'b4\'d4\'da\'cf\'c2\'d2\'bb\'cc\'cb\'b1\'c8\'bd\'cf\'ca\'b1\'c4\'a3\'ca\'bd\'b4\'ae\lang1033 P\lang2052\'b5\'c4\'c6\'f0\'ca\'bc\'b1\'c8\'bd\'cf\'ce\'bb\'d6\'c3\'ca\'c7\lang1033 p_next(j)\lang2052\'a3\'ac\'c4\'bf\'b1\'ea\'b4\'ae\'b2\'bb\'bb\'d8\'cb\'dd\'a3\'ac\'c8\'d4\'d6\'b8\'cf\'f2\'c9\'cf\'d2\'bb\'cc\'c3\'ca\'a7\'c5\'e4\'b5\'c4\'d7\'d6\'b7\'fb\'a1\'a3\par
\par
\par
\par
\par

\pard\par
}
